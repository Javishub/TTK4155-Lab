
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ee  00800100  000017d4  00001868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  008001ee  008001ee  00001956  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001956  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000019b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  000019f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002626  00000000  00000000  00001bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b6  00000000  00000000  000041de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000111d  00000000  00000000  00004b94  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004cc  00000000  00000000  00005cb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008ac  00000000  00000000  00006180  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001476  00000000  00000000  00006a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00007ea2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__ctors_end>
       4:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
       8:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
       c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      10:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      14:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      18:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      1c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      20:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      24:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      28:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      2c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      30:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      34:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      38:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      3c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      40:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      44:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      48:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      4c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      50:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      54:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      58:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      5c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      60:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      64:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      68:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      6c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 00       	nop
      76:	00 5f       	subi	r16, 0xF0	; 240
      78:	00 00       	nop
      7a:	00 07       	cpc	r16, r16
      7c:	00 07       	cpc	r16, r16
      7e:	00 14       	cp	r0, r0
      80:	7f 14       	cp	r7, r15
      82:	7f 14       	cp	r7, r15
      84:	24 2a       	or	r2, r20
      86:	7f 2a       	or	r7, r31
      88:	12 23       	and	r17, r18
      8a:	13 08       	sbc	r1, r3
      8c:	64 62       	ori	r22, 0x24	; 36
      8e:	36 49       	sbci	r19, 0x96	; 150
      90:	55 22       	and	r5, r21
      92:	50 00       	.word	0x0050	; ????
      94:	05 03       	mulsu	r16, r21
      96:	00 00       	nop
      98:	00 1c       	adc	r0, r0
      9a:	22 41       	sbci	r18, 0x12	; 18
      9c:	00 00       	nop
      9e:	41 22       	and	r4, r17
      a0:	1c 00       	.word	0x001c	; ????
      a2:	08 2a       	or	r0, r24
      a4:	1c 2a       	or	r1, r28
      a6:	08 08       	sbc	r0, r8
      a8:	08 3e       	cpi	r16, 0xE8	; 232
      aa:	08 08       	sbc	r0, r8
      ac:	00 50       	subi	r16, 0x00	; 0
      ae:	30 00       	.word	0x0030	; ????
      b0:	00 08       	sbc	r0, r0
      b2:	08 08       	sbc	r0, r8
      b4:	08 08       	sbc	r0, r8
      b6:	00 60       	ori	r16, 0x00	; 0
      b8:	60 00       	.word	0x0060	; ????
      ba:	00 20       	and	r0, r0
      bc:	10 08       	sbc	r1, r0
      be:	04 02       	muls	r16, r20
      c0:	3e 51       	subi	r19, 0x1E	; 30
      c2:	49 45       	sbci	r20, 0x59	; 89
      c4:	3e 00       	.word	0x003e	; ????
      c6:	42 7f       	andi	r20, 0xF2	; 242
      c8:	40 00       	.word	0x0040	; ????
      ca:	42 61       	ori	r20, 0x12	; 18
      cc:	51 49       	sbci	r21, 0x91	; 145
      ce:	46 21       	and	r20, r6
      d0:	41 45       	sbci	r20, 0x51	; 81
      d2:	4b 31       	cpi	r20, 0x1B	; 27
      d4:	18 14       	cp	r1, r8
      d6:	12 7f       	andi	r17, 0xF2	; 242
      d8:	10 27       	eor	r17, r16
      da:	45 45       	sbci	r20, 0x55	; 85
      dc:	45 39       	cpi	r20, 0x95	; 149
      de:	3c 4a       	sbci	r19, 0xAC	; 172
      e0:	49 49       	sbci	r20, 0x99	; 153
      e2:	30 01       	movw	r6, r0
      e4:	71 09       	sbc	r23, r1
      e6:	05 03       	mulsu	r16, r21
      e8:	36 49       	sbci	r19, 0x96	; 150
      ea:	49 49       	sbci	r20, 0x99	; 153
      ec:	36 06       	cpc	r3, r22
      ee:	49 49       	sbci	r20, 0x99	; 153
      f0:	29 1e       	adc	r2, r25
      f2:	00 36       	cpi	r16, 0x60	; 96
      f4:	36 00       	.word	0x0036	; ????
      f6:	00 00       	nop
      f8:	56 36       	cpi	r21, 0x66	; 102
      fa:	00 00       	nop
      fc:	00 08       	sbc	r0, r0
      fe:	14 22       	and	r1, r20
     100:	41 14       	cp	r4, r1
     102:	14 14       	cp	r1, r4
     104:	14 14       	cp	r1, r4
     106:	41 22       	and	r4, r17
     108:	14 08       	sbc	r1, r4
     10a:	00 02       	muls	r16, r16
     10c:	01 51       	subi	r16, 0x11	; 17
     10e:	09 06       	cpc	r0, r25
     110:	32 49       	sbci	r19, 0x92	; 146
     112:	79 41       	sbci	r23, 0x19	; 25
     114:	3e 7e       	andi	r19, 0xEE	; 238
     116:	11 11       	cpse	r17, r1
     118:	11 7e       	andi	r17, 0xE1	; 225
     11a:	7f 49       	sbci	r23, 0x9F	; 159
     11c:	49 49       	sbci	r20, 0x99	; 153
     11e:	36 3e       	cpi	r19, 0xE6	; 230
     120:	41 41       	sbci	r20, 0x11	; 17
     122:	41 22       	and	r4, r17
     124:	7f 41       	sbci	r23, 0x1F	; 31
     126:	41 22       	and	r4, r17
     128:	1c 7f       	andi	r17, 0xFC	; 252
     12a:	49 49       	sbci	r20, 0x99	; 153
     12c:	49 41       	sbci	r20, 0x19	; 25
     12e:	7f 09       	sbc	r23, r15
     130:	09 01       	movw	r0, r18
     132:	01 3e       	cpi	r16, 0xE1	; 225
     134:	41 41       	sbci	r20, 0x11	; 17
     136:	51 32       	cpi	r21, 0x21	; 33
     138:	7f 08       	sbc	r7, r15
     13a:	08 08       	sbc	r0, r8
     13c:	7f 00       	.word	0x007f	; ????
     13e:	41 7f       	andi	r20, 0xF1	; 241
     140:	41 00       	.word	0x0041	; ????
     142:	20 40       	sbci	r18, 0x00	; 0
     144:	41 3f       	cpi	r20, 0xF1	; 241
     146:	01 7f       	andi	r16, 0xF1	; 241
     148:	08 14       	cp	r0, r8
     14a:	22 41       	sbci	r18, 0x12	; 18
     14c:	7f 40       	sbci	r23, 0x0F	; 15
     14e:	40 40       	sbci	r20, 0x00	; 0
     150:	40 7f       	andi	r20, 0xF0	; 240
     152:	02 04       	cpc	r0, r2
     154:	02 7f       	andi	r16, 0xF2	; 242
     156:	7f 04       	cpc	r7, r15
     158:	08 10       	cpse	r0, r8
     15a:	7f 3e       	cpi	r23, 0xEF	; 239
     15c:	41 41       	sbci	r20, 0x11	; 17
     15e:	41 3e       	cpi	r20, 0xE1	; 225
     160:	7f 09       	sbc	r23, r15
     162:	09 09       	sbc	r16, r9
     164:	06 3e       	cpi	r16, 0xE6	; 230
     166:	41 51       	subi	r20, 0x11	; 17
     168:	21 5e       	subi	r18, 0xE1	; 225
     16a:	7f 09       	sbc	r23, r15
     16c:	19 29       	or	r17, r9
     16e:	46 46       	sbci	r20, 0x66	; 102
     170:	49 49       	sbci	r20, 0x99	; 153
     172:	49 31       	cpi	r20, 0x19	; 25
     174:	01 01       	movw	r0, r2
     176:	7f 01       	movw	r14, r30
     178:	01 3f       	cpi	r16, 0xF1	; 241
     17a:	40 40       	sbci	r20, 0x00	; 0
     17c:	40 3f       	cpi	r20, 0xF0	; 240
     17e:	1f 20       	and	r1, r15
     180:	40 20       	and	r4, r0
     182:	1f 7f       	andi	r17, 0xFF	; 255
     184:	20 18       	sub	r2, r0
     186:	20 7f       	andi	r18, 0xF0	; 240
     188:	63 14       	cp	r6, r3
     18a:	08 14       	cp	r0, r8
     18c:	63 03       	mulsu	r22, r19
     18e:	04 78       	andi	r16, 0x84	; 132
     190:	04 03       	mulsu	r16, r20
     192:	61 51       	subi	r22, 0x11	; 17
     194:	49 45       	sbci	r20, 0x59	; 89
     196:	43 00       	.word	0x0043	; ????
     198:	00 7f       	andi	r16, 0xF0	; 240
     19a:	41 41       	sbci	r20, 0x11	; 17
     19c:	02 04       	cpc	r0, r2
     19e:	08 10       	cpse	r0, r8
     1a0:	20 41       	sbci	r18, 0x10	; 16
     1a2:	41 7f       	andi	r20, 0xF1	; 241
     1a4:	00 00       	nop
     1a6:	04 02       	muls	r16, r20
     1a8:	01 02       	muls	r16, r17
     1aa:	04 40       	sbci	r16, 0x04	; 4
     1ac:	40 40       	sbci	r20, 0x00	; 0
     1ae:	40 40       	sbci	r20, 0x00	; 0
     1b0:	00 01       	movw	r0, r0
     1b2:	02 04       	cpc	r0, r2
     1b4:	00 20       	and	r0, r0
     1b6:	54 54       	subi	r21, 0x44	; 68
     1b8:	54 78       	andi	r21, 0x84	; 132
     1ba:	7f 48       	sbci	r23, 0x8F	; 143
     1bc:	44 44       	sbci	r20, 0x44	; 68
     1be:	38 38       	cpi	r19, 0x88	; 136
     1c0:	44 44       	sbci	r20, 0x44	; 68
     1c2:	44 20       	and	r4, r4
     1c4:	38 44       	sbci	r19, 0x48	; 72
     1c6:	44 48       	sbci	r20, 0x84	; 132
     1c8:	7f 38       	cpi	r23, 0x8F	; 143
     1ca:	54 54       	subi	r21, 0x44	; 68
     1cc:	54 18       	sub	r5, r4
     1ce:	08 7e       	andi	r16, 0xE8	; 232
     1d0:	09 01       	movw	r0, r18
     1d2:	02 08       	sbc	r0, r2
     1d4:	14 54       	subi	r17, 0x44	; 68
     1d6:	54 3c       	cpi	r21, 0xC4	; 196
     1d8:	7f 08       	sbc	r7, r15
     1da:	04 04       	cpc	r0, r4
     1dc:	78 00       	.word	0x0078	; ????
     1de:	44 7d       	andi	r20, 0xD4	; 212
     1e0:	40 00       	.word	0x0040	; ????
     1e2:	20 40       	sbci	r18, 0x00	; 0
     1e4:	44 3d       	cpi	r20, 0xD4	; 212
     1e6:	00 00       	nop
     1e8:	7f 10       	cpse	r7, r15
     1ea:	28 44       	sbci	r18, 0x48	; 72
     1ec:	00 41       	sbci	r16, 0x10	; 16
     1ee:	7f 40       	sbci	r23, 0x0F	; 15
     1f0:	00 7c       	andi	r16, 0xC0	; 192
     1f2:	04 18       	sub	r0, r4
     1f4:	04 78       	andi	r16, 0x84	; 132
     1f6:	7c 08       	sbc	r7, r12
     1f8:	04 04       	cpc	r0, r4
     1fa:	78 38       	cpi	r23, 0x88	; 136
     1fc:	44 44       	sbci	r20, 0x44	; 68
     1fe:	44 38       	cpi	r20, 0x84	; 132
     200:	7c 14       	cp	r7, r12
     202:	14 14       	cp	r1, r4
     204:	08 08       	sbc	r0, r8
     206:	14 14       	cp	r1, r4
     208:	18 7c       	andi	r17, 0xC8	; 200
     20a:	7c 08       	sbc	r7, r12
     20c:	04 04       	cpc	r0, r4
     20e:	08 48       	sbci	r16, 0x88	; 136
     210:	54 54       	subi	r21, 0x44	; 68
     212:	54 20       	and	r5, r4
     214:	04 3f       	cpi	r16, 0xF4	; 244
     216:	44 40       	sbci	r20, 0x04	; 4
     218:	20 3c       	cpi	r18, 0xC0	; 192
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	20 7c       	andi	r18, 0xC0	; 192
     21e:	1c 20       	and	r1, r12
     220:	40 20       	and	r4, r0
     222:	1c 3c       	cpi	r17, 0xCC	; 204
     224:	40 30       	cpi	r20, 0x00	; 0
     226:	40 3c       	cpi	r20, 0xC0	; 192
     228:	44 28       	or	r4, r4
     22a:	10 28       	or	r1, r0
     22c:	44 0c       	add	r4, r4
     22e:	50 50       	subi	r21, 0x00	; 0
     230:	50 3c       	cpi	r21, 0xC0	; 192
     232:	44 64       	ori	r20, 0x44	; 68
     234:	54 4c       	sbci	r21, 0xC4	; 196
     236:	44 00       	.word	0x0044	; ????
     238:	08 36       	cpi	r16, 0x68	; 104
     23a:	41 00       	.word	0x0041	; ????
     23c:	00 00       	nop
     23e:	7f 00       	.word	0x007f	; ????
     240:	00 00       	nop
     242:	41 36       	cpi	r20, 0x61	; 97
     244:	08 00       	.word	0x0008	; ????
     246:	02 01       	movw	r0, r4
     248:	03 02       	muls	r16, r19
     24a:	01 00       	.word	0x0001	; ????

0000024c <__ctors_end>:
     24c:	11 24       	eor	r1, r1
     24e:	1f be       	out	0x3f, r1	; 63
     250:	cf ef       	ldi	r28, 0xFF	; 255
     252:	d4 e0       	ldi	r29, 0x04	; 4
     254:	de bf       	out	0x3e, r29	; 62
     256:	cd bf       	out	0x3d, r28	; 61

00000258 <__do_copy_data>:
     258:	11 e0       	ldi	r17, 0x01	; 1
     25a:	a0 e0       	ldi	r26, 0x00	; 0
     25c:	b1 e0       	ldi	r27, 0x01	; 1
     25e:	e4 ed       	ldi	r30, 0xD4	; 212
     260:	f7 e1       	ldi	r31, 0x17	; 23
     262:	02 c0       	rjmp	.+4      	; 0x268 <__do_copy_data+0x10>
     264:	05 90       	lpm	r0, Z+
     266:	0d 92       	st	X+, r0
     268:	ae 3e       	cpi	r26, 0xEE	; 238
     26a:	b1 07       	cpc	r27, r17
     26c:	d9 f7       	brne	.-10     	; 0x264 <__do_copy_data+0xc>

0000026e <__do_clear_bss>:
     26e:	21 e0       	ldi	r18, 0x01	; 1
     270:	ae ee       	ldi	r26, 0xEE	; 238
     272:	b1 e0       	ldi	r27, 0x01	; 1
     274:	01 c0       	rjmp	.+2      	; 0x278 <.do_clear_bss_start>

00000276 <.do_clear_bss_loop>:
     276:	1d 92       	st	X+, r1

00000278 <.do_clear_bss_start>:
     278:	ac 3f       	cpi	r26, 0xFC	; 252
     27a:	b2 07       	cpc	r27, r18
     27c:	e1 f7       	brne	.-8      	; 0x276 <.do_clear_bss_loop>
     27e:	0e 94 1b 05 	call	0xa36	; 0xa36 <main>
     282:	0c 94 e8 0b 	jmp	0x17d0	; 0x17d0 <_exit>

00000286 <__bad_interrupt>:
     286:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000028a <uart_Transmit>:

void can_init(){
	mcp_init();
	//enable interrupt on both rx1 and rx0
	mcp_bit_modify(MCP_CANINTE, MCP_RX1IF | MCP_RX0IF, 0xFF);
	interrupt_can_recieve_init();
     28a:	5d 9b       	sbis	0x0b, 5	; 11
     28c:	fe cf       	rjmp	.-4      	; 0x28a <uart_Transmit>
     28e:	8c b9       	out	0x0c, r24	; 12
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	08 95       	ret

00000296 <uart_Receive>:
     296:	5f 9b       	sbis	0x0b, 7	; 11
     298:	fe cf       	rjmp	.-4      	; 0x296 <uart_Receive>
     29a:	8c b1       	in	r24, 0x0c	; 12
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	08 95       	ret

000002a0 <playgame>:
     2a0:	08 95       	ret

000002a2 <UART_Init>:
     2a2:	90 bd       	out	0x20, r25	; 32
     2a4:	89 b9       	out	0x09, r24	; 9
     2a6:	88 e1       	ldi	r24, 0x18	; 24
     2a8:	8a b9       	out	0x0a, r24	; 10
     2aa:	8e e8       	ldi	r24, 0x8E	; 142
     2ac:	80 bd       	out	0x20, r24	; 32
     2ae:	6b e4       	ldi	r22, 0x4B	; 75
     2b0:	71 e0       	ldi	r23, 0x01	; 1
     2b2:	85 e4       	ldi	r24, 0x45	; 69
     2b4:	91 e0       	ldi	r25, 0x01	; 1
     2b6:	0e 94 4a 08 	call	0x1094	; 0x1094 <fdevopen>
     2ba:	08 95       	ret

000002bc <adc_init>:
     2bc:	80 e8       	ldi	r24, 0x80	; 128
     2be:	85 bf       	out	0x35, r24	; 53
     2c0:	80 e2       	ldi	r24, 0x20	; 32
     2c2:	80 bf       	out	0x30, r24	; 48
     2c4:	08 95       	ret

000002c6 <pwm_init>:
     2c6:	81 b3       	in	r24, 0x11	; 17
     2c8:	80 61       	ori	r24, 0x10	; 16
     2ca:	81 bb       	out	0x11, r24	; 17
     2cc:	ab e8       	ldi	r26, 0x8B	; 139
     2ce:	b0 e0       	ldi	r27, 0x00	; 0
     2d0:	8c 91       	ld	r24, X
     2d2:	82 60       	ori	r24, 0x02	; 2
     2d4:	8c 93       	st	X, r24
     2d6:	8c 91       	ld	r24, X
     2d8:	81 60       	ori	r24, 0x01	; 1
     2da:	8c 93       	st	X, r24
     2dc:	ea e8       	ldi	r30, 0x8A	; 138
     2de:	f0 e0       	ldi	r31, 0x00	; 0
     2e0:	80 81       	ld	r24, Z
     2e2:	88 60       	ori	r24, 0x08	; 8
     2e4:	80 83       	st	Z, r24
     2e6:	80 81       	ld	r24, Z
     2e8:	80 61       	ori	r24, 0x10	; 16
     2ea:	80 83       	st	Z, r24
     2ec:	8c 91       	ld	r24, X
     2ee:	8f 77       	andi	r24, 0x7F	; 127
     2f0:	8c 93       	st	X, r24
     2f2:	8c 91       	ld	r24, X
     2f4:	80 64       	ori	r24, 0x40	; 64
     2f6:	8c 93       	st	X, r24
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     300:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     304:	80 81       	ld	r24, Z
     306:	8b 7f       	andi	r24, 0xFB	; 251
     308:	80 83       	st	Z, r24
     30a:	80 81       	ld	r24, Z
     30c:	8d 7f       	andi	r24, 0xFD	; 253
     30e:	80 83       	st	Z, r24
     310:	80 81       	ld	r24, Z
     312:	81 60       	ori	r24, 0x01	; 1
     314:	80 83       	st	Z, r24
     316:	08 95       	ret

00000318 <joysticks>:
     318:	e0 e0       	ldi	r30, 0x00	; 0
     31a:	f4 e1       	ldi	r31, 0x14	; 20
     31c:	21 e8       	ldi	r18, 0x81	; 129
     31e:	20 83       	st	Z, r18
     320:	a9 e9       	ldi	r26, 0x99	; 153
     322:	b9 e0       	ldi	r27, 0x09	; 9
     324:	11 97       	sbiw	r26, 0x01	; 1
     326:	f1 f7       	brne	.-4      	; 0x324 <joysticks+0xc>
     328:	00 c0       	rjmp	.+0      	; 0x32a <joysticks+0x12>
     32a:	30 81       	ld	r19, Z
     32c:	20 e8       	ldi	r18, 0x80	; 128
     32e:	20 83       	st	Z, r18
     330:	a9 e9       	ldi	r26, 0x99	; 153
     332:	b9 e0       	ldi	r27, 0x09	; 9
     334:	11 97       	sbiw	r26, 0x01	; 1
     336:	f1 f7       	brne	.-4      	; 0x334 <joysticks+0x1c>
     338:	00 c0       	rjmp	.+0      	; 0x33a <joysticks+0x22>
     33a:	20 81       	ld	r18, Z
     33c:	fc 01       	movw	r30, r24
     33e:	30 83       	st	Z, r19
     340:	21 83       	std	Z+1, r18	; 0x01
     342:	08 95       	ret

00000344 <calibrate>:
     344:	fc 01       	movw	r30, r24
     346:	a0 e0       	ldi	r26, 0x00	; 0
     348:	b4 e1       	ldi	r27, 0x14	; 20
     34a:	81 e8       	ldi	r24, 0x81	; 129
     34c:	8c 93       	st	X, r24
     34e:	8c 91       	ld	r24, X
     350:	98 ef       	ldi	r25, 0xF8	; 248
     352:	98 0f       	add	r25, r24
     354:	88 5f       	subi	r24, 0xF8	; 248
     356:	90 83       	st	Z, r25
     358:	81 83       	std	Z+1, r24	; 0x01
     35a:	80 e8       	ldi	r24, 0x80	; 128
     35c:	8c 93       	st	X, r24
     35e:	8c 91       	ld	r24, X
     360:	98 ef       	ldi	r25, 0xF8	; 248
     362:	98 0f       	add	r25, r24
     364:	88 5f       	subi	r24, 0xF8	; 248
     366:	92 83       	std	Z+2, r25	; 0x02
     368:	83 83       	std	Z+3, r24	; 0x03
     36a:	08 95       	ret

0000036c <direction>:
     36c:	0f 93       	push	r16
     36e:	1f 93       	push	r17
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	00 d0       	rcall	.+0      	; 0x376 <direction+0xa>
     376:	cd b7       	in	r28, 0x3d	; 61
     378:	de b7       	in	r29, 0x3e	; 62
     37a:	8c 01       	movw	r16, r24
     37c:	ce 01       	movw	r24, r28
     37e:	01 96       	adiw	r24, 0x01	; 1
     380:	0e 94 8c 01 	call	0x318	; 0x318 <joysticks>
     384:	99 81       	ldd	r25, Y+1	; 0x01
     386:	f8 01       	movw	r30, r16
     388:	20 81       	ld	r18, Z
     38a:	81 81       	ldd	r24, Z+1	; 0x01
     38c:	98 17       	cp	r25, r24
     38e:	10 f4       	brcc	.+4      	; 0x394 <direction+0x28>
     390:	82 e0       	ldi	r24, 0x02	; 2
     392:	01 c0       	rjmp	.+2      	; 0x396 <direction+0x2a>
     394:	83 e0       	ldi	r24, 0x03	; 3
     396:	29 17       	cp	r18, r25
     398:	08 f0       	brcs	.+2      	; 0x39c <direction+0x30>
     39a:	84 e0       	ldi	r24, 0x04	; 4
     39c:	9a 81       	ldd	r25, Y+2	; 0x02
     39e:	f8 01       	movw	r30, r16
     3a0:	23 81       	ldd	r18, Z+3	; 0x03
     3a2:	92 17       	cp	r25, r18
     3a4:	08 f0       	brcs	.+2      	; 0x3a8 <direction+0x3c>
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	f8 01       	movw	r30, r16
     3aa:	22 81       	ldd	r18, Z+2	; 0x02
     3ac:	29 17       	cp	r18, r25
     3ae:	08 f0       	brcs	.+2      	; 0x3b2 <direction+0x46>
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	0f 90       	pop	r0
     3b6:	0f 90       	pop	r0
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	1f 91       	pop	r17
     3be:	0f 91       	pop	r16
     3c0:	08 95       	ret

000003c2 <oled_write_command>:
     3c2:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xe04>
     3c6:	08 95       	ret

000003c8 <oled_init>:
     3c8:	8e ea       	ldi	r24, 0xAE	; 174
     3ca:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3ce:	81 ea       	ldi	r24, 0xA1	; 161
     3d0:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3d4:	8a ed       	ldi	r24, 0xDA	; 218
     3d6:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3da:	82 e1       	ldi	r24, 0x12	; 18
     3dc:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3e0:	88 ec       	ldi	r24, 0xC8	; 200
     3e2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3e6:	88 ea       	ldi	r24, 0xA8	; 168
     3e8:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3ec:	8f e3       	ldi	r24, 0x3F	; 63
     3ee:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3f2:	85 ed       	ldi	r24, 0xD5	; 213
     3f4:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3f8:	80 e8       	ldi	r24, 0x80	; 128
     3fa:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     3fe:	81 e8       	ldi	r24, 0x81	; 129
     400:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     404:	80 e5       	ldi	r24, 0x50	; 80
     406:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     40a:	89 ed       	ldi	r24, 0xD9	; 217
     40c:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     410:	81 e2       	ldi	r24, 0x21	; 33
     412:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     416:	80 e2       	ldi	r24, 0x20	; 32
     418:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     41c:	82 e0       	ldi	r24, 0x02	; 2
     41e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     422:	8b ed       	ldi	r24, 0xDB	; 219
     424:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     428:	80 e3       	ldi	r24, 0x30	; 48
     42a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     42e:	8d ea       	ldi	r24, 0xAD	; 173
     430:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     43a:	84 ea       	ldi	r24, 0xA4	; 164
     43c:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     440:	86 ea       	ldi	r24, 0xA6	; 166
     442:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     446:	8f ea       	ldi	r24, 0xAF	; 175
     448:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     44c:	08 95       	ret

0000044e <oled_write_data>:
     44e:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x1004>
     452:	08 95       	ret

00000454 <oled_goto_column>:
     454:	cf 93       	push	r28
     456:	c8 2f       	mov	r28, r24
     458:	81 e2       	ldi	r24, 0x21	; 33
     45a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     45e:	8c 2f       	mov	r24, r28
     460:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     464:	8f e7       	ldi	r24, 0x7F	; 127
     466:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <oled_goto_line>:
     46e:	80 55       	subi	r24, 0x50	; 80
     470:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     474:	08 95       	ret

00000476 <oled_pos>:
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	eb 01       	movw	r28, r22
     47c:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_line>
     480:	ce 01       	movw	r24, r28
     482:	0e 94 2a 02 	call	0x454	; 0x454 <oled_goto_column>
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	08 95       	ret

0000048c <oled_reset>:
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	81 e2       	ldi	r24, 0x21	; 33
     496:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     4a0:	8f e7       	ldi	r24, 0x7F	; 127
     4a2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     4a6:	00 e0       	ldi	r16, 0x00	; 0
     4a8:	10 e0       	ldi	r17, 0x00	; 0
     4aa:	13 c0       	rjmp	.+38     	; 0x4d2 <oled_reset+0x46>
     4ac:	c8 01       	movw	r24, r16
     4ae:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_line>
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 2a 02 	call	0x454	; 0x454 <oled_goto_column>
     4ba:	c0 e0       	ldi	r28, 0x00	; 0
     4bc:	d0 e0       	ldi	r29, 0x00	; 0
     4be:	04 c0       	rjmp	.+8      	; 0x4c8 <oled_reset+0x3c>
     4c0:	80 e0       	ldi	r24, 0x00	; 0
     4c2:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     4c6:	21 96       	adiw	r28, 0x01	; 1
     4c8:	c0 38       	cpi	r28, 0x80	; 128
     4ca:	d1 05       	cpc	r29, r1
     4cc:	cc f3       	brlt	.-14     	; 0x4c0 <oled_reset+0x34>
     4ce:	0f 5f       	subi	r16, 0xFF	; 255
     4d0:	1f 4f       	sbci	r17, 0xFF	; 255
     4d2:	08 30       	cpi	r16, 0x08	; 8
     4d4:	11 05       	cpc	r17, r1
     4d6:	54 f3       	brlt	.-44     	; 0x4ac <oled_reset+0x20>
     4d8:	60 e0       	ldi	r22, 0x00	; 0
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	0f 91       	pop	r16
     4ec:	08 95       	ret

000004ee <oled_clear_line>:
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_line>
     4f6:	80 e0       	ldi	r24, 0x00	; 0
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	0e 94 2a 02 	call	0x454	; 0x454 <oled_goto_column>
     4fe:	c0 e0       	ldi	r28, 0x00	; 0
     500:	d0 e0       	ldi	r29, 0x00	; 0
     502:	04 c0       	rjmp	.+8      	; 0x50c <__stack+0xd>
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     50a:	21 96       	adiw	r28, 0x01	; 1
     50c:	c0 38       	cpi	r28, 0x80	; 128
     50e:	d1 05       	cpc	r29, r1
     510:	cc f3       	brlt	.-14     	; 0x504 <__stack+0x5>
     512:	df 91       	pop	r29
     514:	cf 91       	pop	r28
     516:	08 95       	ret

00000518 <oled_brightness>:
     518:	cf 93       	push	r28
     51a:	df 93       	push	r29
     51c:	2f ef       	ldi	r18, 0xFF	; 255
     51e:	ac 01       	movw	r20, r24
     520:	24 9f       	mul	r18, r20
     522:	c0 01       	movw	r24, r0
     524:	25 9f       	mul	r18, r21
     526:	90 0d       	add	r25, r0
     528:	11 24       	eor	r1, r1
     52a:	64 e6       	ldi	r22, 0x64	; 100
     52c:	70 e0       	ldi	r23, 0x00	; 0
     52e:	0e 94 01 07 	call	0xe02	; 0xe02 <__divmodhi4>
     532:	eb 01       	movw	r28, r22
     534:	c1 50       	subi	r28, 0x01	; 1
     536:	df 4f       	sbci	r29, 0xFF	; 255
     538:	81 e8       	ldi	r24, 0x81	; 129
     53a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     53e:	8c 2f       	mov	r24, r28
     540:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	08 95       	ret

0000054a <oled_print_char>:
     54a:	0f 93       	push	r16
     54c:	1f 93       	push	r17
     54e:	cf 93       	push	r28
     550:	df 93       	push	r29
     552:	8c 01       	movw	r16, r24
     554:	00 52       	subi	r16, 0x20	; 32
     556:	11 09       	sbc	r17, r1
     558:	c0 e0       	ldi	r28, 0x00	; 0
     55a:	d0 e0       	ldi	r29, 0x00	; 0
     55c:	0f c0       	rjmp	.+30     	; 0x57c <oled_print_char+0x32>
     55e:	f8 01       	movw	r30, r16
     560:	ee 0f       	add	r30, r30
     562:	ff 1f       	adc	r31, r31
     564:	ee 0f       	add	r30, r30
     566:	ff 1f       	adc	r31, r31
     568:	e0 0f       	add	r30, r16
     56a:	f1 1f       	adc	r31, r17
     56c:	ec 0f       	add	r30, r28
     56e:	fd 1f       	adc	r31, r29
     570:	e0 59       	subi	r30, 0x90	; 144
     572:	ff 4f       	sbci	r31, 0xFF	; 255
     574:	84 91       	lpm	r24, Z
     576:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     57a:	21 96       	adiw	r28, 0x01	; 1
     57c:	c5 30       	cpi	r28, 0x05	; 5
     57e:	d1 05       	cpc	r29, r1
     580:	74 f3       	brlt	.-36     	; 0x55e <oled_print_char+0x14>
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	1f 91       	pop	r17
     588:	0f 91       	pop	r16
     58a:	08 95       	ret

0000058c <oled_print>:
     58c:	0f 93       	push	r16
     58e:	1f 93       	push	r17
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
     594:	8c 01       	movw	r16, r24
     596:	c0 e0       	ldi	r28, 0x00	; 0
     598:	d0 e0       	ldi	r29, 0x00	; 0
     59a:	08 c0       	rjmp	.+16     	; 0x5ac <oled_print+0x20>
     59c:	f8 01       	movw	r30, r16
     59e:	ec 0f       	add	r30, r28
     5a0:	fd 1f       	adc	r31, r29
     5a2:	80 81       	ld	r24, Z
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	0e 94 a5 02 	call	0x54a	; 0x54a <oled_print_char>
     5aa:	21 96       	adiw	r28, 0x01	; 1
     5ac:	f8 01       	movw	r30, r16
     5ae:	01 90       	ld	r0, Z+
     5b0:	00 20       	and	r0, r0
     5b2:	e9 f7       	brne	.-6      	; 0x5ae <oled_print+0x22>
     5b4:	31 97       	sbiw	r30, 0x01	; 1
     5b6:	e0 1b       	sub	r30, r16
     5b8:	f1 0b       	sbc	r31, r17
     5ba:	ce 17       	cp	r28, r30
     5bc:	df 07       	cpc	r29, r31
     5be:	70 f3       	brcs	.-36     	; 0x59c <oled_print+0x10>
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	1f 91       	pop	r17
     5c6:	0f 91       	pop	r16
     5c8:	08 95       	ret

000005ca <game_loss>:
     5ca:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
     5ce:	81 e1       	ldi	r24, 0x11	; 17
     5d0:	91 e0       	ldi	r25, 0x01	; 1
     5d2:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
     5e2:	8a e1       	ldi	r24, 0x1A	; 26
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
     5ea:	08 95       	ret

000005ec <won_game>:
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	70 e0       	ldi	r23, 0x00	; 0
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 77 02 	call	0x4ee	; 0x4ee <oled_clear_line>
     600:	8e e2       	ldi	r24, 0x2E	; 46
     602:	91 e0       	ldi	r25, 0x01	; 1
     604:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
     608:	08 95       	ret

0000060a <oled_print_int>:
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	00 d0       	rcall	.+0      	; 0x614 <oled_print_int+0xa>
     614:	00 d0       	rcall	.+0      	; 0x616 <oled_print_int+0xc>
     616:	00 d0       	rcall	.+0      	; 0x618 <oled_print_int+0xe>
     618:	cd b7       	in	r28, 0x3d	; 61
     61a:	de b7       	in	r29, 0x3e	; 62
     61c:	9f 93       	push	r25
     61e:	8f 93       	push	r24
     620:	87 e3       	ldi	r24, 0x37	; 55
     622:	91 e0       	ldi	r25, 0x01	; 1
     624:	9f 93       	push	r25
     626:	8f 93       	push	r24
     628:	8e 01       	movw	r16, r28
     62a:	0f 5f       	subi	r16, 0xFF	; 255
     62c:	1f 4f       	sbci	r17, 0xFF	; 255
     62e:	1f 93       	push	r17
     630:	0f 93       	push	r16
     632:	0e 94 db 08 	call	0x11b6	; 0x11b6 <sprintf>
     636:	c8 01       	movw	r24, r16
     638:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	26 96       	adiw	r28, 0x06	; 6
     64a:	0f b6       	in	r0, 0x3f	; 63
     64c:	f8 94       	cli
     64e:	de bf       	out	0x3e, r29	; 62
     650:	0f be       	out	0x3f, r0	; 63
     652:	cd bf       	out	0x3d, r28	; 61
     654:	df 91       	pop	r29
     656:	cf 91       	pop	r28
     658:	1f 91       	pop	r17
     65a:	0f 91       	pop	r16
     65c:	08 95       	ret

0000065e <show_highscore>:
     65e:	60 e2       	ldi	r22, 0x20	; 32
     660:	70 e0       	ldi	r23, 0x00	; 0
     662:	84 e0       	ldi	r24, 0x04	; 4
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
     66a:	8a e3       	ldi	r24, 0x3A	; 58
     66c:	91 e0       	ldi	r25, 0x01	; 1
     66e:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
     672:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <highscore_score>
     676:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <highscore_score+0x1>
     67a:	0e 94 05 03 	call	0x60a	; 0x60a <oled_print_int>
     67e:	08 95       	ret

00000680 <playing_game>:
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	ec 01       	movw	r28, r24
     686:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
     68a:	60 e0       	ldi	r22, 0x00	; 0
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	80 e0       	ldi	r24, 0x00	; 0
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
     696:	86 e4       	ldi	r24, 0x46	; 70
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
     69e:	ce 01       	movw	r24, r28
     6a0:	0e 94 05 03 	call	0x60a	; 0x60a <oled_print_int>
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	08 95       	ret

000006aa <oled_arrow>:
     6aa:	88 e1       	ldi	r24, 0x18	; 24
     6ac:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     6b0:	88 e1       	ldi	r24, 0x18	; 24
     6b2:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     6b6:	8e e7       	ldi	r24, 0x7E	; 126
     6b8:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     6bc:	8c e3       	ldi	r24, 0x3C	; 60
     6be:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     6c2:	88 e1       	ldi	r24, 0x18	; 24
     6c4:	0e 94 27 02 	call	0x44e	; 0x44e <oled_write_data>
     6c8:	08 95       	ret

000006ca <menu_add>:
     6ca:	ef 92       	push	r14
     6cc:	ff 92       	push	r15
     6ce:	0f 93       	push	r16
     6d0:	1f 93       	push	r17
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	ec 01       	movw	r28, r24
     6d8:	7b 01       	movw	r14, r22
     6da:	8a 01       	movw	r16, r20
     6dc:	86 e0       	ldi	r24, 0x06	; 6
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	0e 94 29 07 	call	0xe52	; 0xe52 <malloc>
     6e4:	fc 01       	movw	r30, r24
     6e6:	f1 82       	std	Z+1, r15	; 0x01
     6e8:	e0 82       	st	Z, r14
     6ea:	13 83       	std	Z+3, r17	; 0x03
     6ec:	02 83       	std	Z+2, r16	; 0x02
     6ee:	d5 83       	std	Z+5, r29	; 0x05
     6f0:	c4 83       	std	Z+4, r28	; 0x04
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	02 c0       	rjmp	.+4      	; 0x6fc <menu_add+0x32>
     6f8:	2f 5f       	subi	r18, 0xFF	; 255
     6fa:	3f 4f       	sbci	r19, 0xFF	; 255
     6fc:	f9 01       	movw	r30, r18
     6fe:	33 96       	adiw	r30, 0x03	; 3
     700:	ee 0f       	add	r30, r30
     702:	ff 1f       	adc	r31, r31
     704:	ec 0f       	add	r30, r28
     706:	fd 1f       	adc	r31, r29
     708:	40 81       	ld	r20, Z
     70a:	51 81       	ldd	r21, Z+1	; 0x01
     70c:	45 2b       	or	r20, r21
     70e:	a1 f7       	brne	.-24     	; 0x6f8 <menu_add+0x2e>
     710:	f9 01       	movw	r30, r18
     712:	33 96       	adiw	r30, 0x03	; 3
     714:	ee 0f       	add	r30, r30
     716:	ff 1f       	adc	r31, r31
     718:	ec 0f       	add	r30, r28
     71a:	fd 1f       	adc	r31, r29
     71c:	91 83       	std	Z+1, r25	; 0x01
     71e:	80 83       	st	Z, r24
     720:	df 91       	pop	r29
     722:	cf 91       	pop	r28
     724:	1f 91       	pop	r17
     726:	0f 91       	pop	r16
     728:	ff 90       	pop	r15
     72a:	ef 90       	pop	r14
     72c:	08 95       	ret

0000072e <update_highscore>:
     72e:	20 91 ee 01 	lds	r18, 0x01EE	; 0x8001ee <__data_end>
     732:	30 91 ef 01 	lds	r19, 0x01EF	; 0x8001ef <__data_end+0x1>
     736:	82 17       	cp	r24, r18
     738:	93 07       	cpc	r25, r19
     73a:	44 f0       	brlt	.+16     	; 0x74c <update_highscore+0x1e>
     73c:	90 93 f1 01 	sts	0x01F1, r25	; 0x8001f1 <highscore_score+0x1>
     740:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <highscore_score>
     744:	90 93 ef 01 	sts	0x01EF, r25	; 0x8001ef <__data_end+0x1>
     748:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <__data_end>
     74c:	08 95       	ret

0000074e <spi_set_ss>:
     74e:	88 b3       	in	r24, 0x18	; 24
     750:	80 61       	ori	r24, 0x10	; 16
     752:	88 bb       	out	0x18, r24	; 24
     754:	08 95       	ret

00000756 <spi_clear_ss>:
     756:	88 b3       	in	r24, 0x18	; 24
     758:	8f 7e       	andi	r24, 0xEF	; 239
     75a:	88 bb       	out	0x18, r24	; 24
     75c:	08 95       	ret

0000075e <spi_master_init>:
     75e:	80 eb       	ldi	r24, 0xB0	; 176
     760:	87 bb       	out	0x17, r24	; 23
     762:	81 ed       	ldi	r24, 0xD1	; 209
     764:	8d b9       	out	0x0d, r24	; 13
     766:	0e 94 a7 03 	call	0x74e	; 0x74e <spi_set_ss>
     76a:	08 95       	ret

0000076c <spi_write>:
     76c:	8f b9       	out	0x0f, r24	; 15
     76e:	77 9b       	sbis	0x0e, 7	; 14
     770:	fe cf       	rjmp	.-4      	; 0x76e <spi_write+0x2>
     772:	08 95       	ret

00000774 <spi_read>:
     774:	8f ef       	ldi	r24, 0xFF	; 255
     776:	8f b9       	out	0x0f, r24	; 15
     778:	77 9b       	sbis	0x0e, 7	; 14
     77a:	fe cf       	rjmp	.-4      	; 0x778 <spi_read+0x4>
     77c:	8f b1       	in	r24, 0x0f	; 15
     77e:	08 95       	ret

00000780 <mcp_reset>:
     780:	0e 94 ab 03 	call	0x756	; 0x756 <spi_clear_ss>
     784:	80 ec       	ldi	r24, 0xC0	; 192
     786:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     78a:	0e 94 a7 03 	call	0x74e	; 0x74e <spi_set_ss>
     78e:	08 95       	ret

00000790 <mcp_read>:
     790:	cf 93       	push	r28
     792:	c8 2f       	mov	r28, r24
     794:	0e 94 ab 03 	call	0x756	; 0x756 <spi_clear_ss>
     798:	83 e0       	ldi	r24, 0x03	; 3
     79a:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     79e:	8c 2f       	mov	r24, r28
     7a0:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     7a4:	0e 94 ba 03 	call	0x774	; 0x774 <spi_read>
     7a8:	c8 2f       	mov	r28, r24
     7aa:	0e 94 a7 03 	call	0x74e	; 0x74e <spi_set_ss>
     7ae:	8c 2f       	mov	r24, r28
     7b0:	cf 91       	pop	r28
     7b2:	08 95       	ret

000007b4 <mcp_write>:
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	d8 2f       	mov	r29, r24
     7ba:	c6 2f       	mov	r28, r22
     7bc:	0e 94 ab 03 	call	0x756	; 0x756 <spi_clear_ss>
     7c0:	82 e0       	ldi	r24, 0x02	; 2
     7c2:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     7c6:	8d 2f       	mov	r24, r29
     7c8:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     7cc:	8c 2f       	mov	r24, r28
     7ce:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     7d2:	0e 94 a7 03 	call	0x74e	; 0x74e <spi_set_ss>
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	08 95       	ret

000007dc <mcp_bit_modify>:
     7dc:	1f 93       	push	r17
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	18 2f       	mov	r17, r24
     7e4:	d6 2f       	mov	r29, r22
     7e6:	c4 2f       	mov	r28, r20
     7e8:	0e 94 ab 03 	call	0x756	; 0x756 <spi_clear_ss>
     7ec:	85 e0       	ldi	r24, 0x05	; 5
     7ee:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     7f2:	81 2f       	mov	r24, r17
     7f4:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     7f8:	8d 2f       	mov	r24, r29
     7fa:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     7fe:	8c 2f       	mov	r24, r28
     800:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     804:	0e 94 a7 03 	call	0x74e	; 0x74e <spi_set_ss>
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	1f 91       	pop	r17
     80e:	08 95       	ret

00000810 <mcp_init>:
     810:	0e 94 af 03 	call	0x75e	; 0x75e <spi_master_init>
     814:	0e 94 c0 03 	call	0x780	; 0x780 <mcp_reset>
     818:	8c ec       	ldi	r24, 0xCC	; 204
     81a:	94 e0       	ldi	r25, 0x04	; 4
     81c:	01 97       	sbiw	r24, 0x01	; 1
     81e:	f1 f7       	brne	.-4      	; 0x81c <mcp_init+0xc>
     820:	00 c0       	rjmp	.+0      	; 0x822 <mcp_init+0x12>
     822:	00 00       	nop
     824:	8e e0       	ldi	r24, 0x0E	; 14
     826:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     82a:	98 2f       	mov	r25, r24
     82c:	90 7e       	andi	r25, 0xE0	; 224
     82e:	90 38       	cpi	r25, 0x80	; 128
     830:	61 f0       	breq	.+24     	; 0x84a <mcp_init+0x3a>
     832:	1f 92       	push	r1
     834:	8f 93       	push	r24
     836:	8e e4       	ldi	r24, 0x4E	; 78
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	9f 93       	push	r25
     83c:	8f 93       	push	r24
     83e:	0e 94 95 08 	call	0x112a	; 0x112a <printf>
     842:	0f 90       	pop	r0
     844:	0f 90       	pop	r0
     846:	0f 90       	pop	r0
     848:	0f 90       	pop	r0
     84a:	08 95       	ret

0000084c <mcp_request_to_send>:
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
     850:	ec 01       	movw	r28, r24
     852:	0e 94 ab 03 	call	0x756	; 0x756 <spi_clear_ss>
     856:	ce 01       	movw	r24, r28
     858:	63 e0       	ldi	r22, 0x03	; 3
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	0e 94 01 07 	call	0xe02	; 0xe02 <__divmodhi4>
     860:	00 97       	sbiw	r24, 0x00	; 0
     862:	39 f0       	breq	.+14     	; 0x872 <mcp_request_to_send+0x26>
     864:	81 30       	cpi	r24, 0x01	; 1
     866:	91 05       	cpc	r25, r1
     868:	31 f0       	breq	.+12     	; 0x876 <mcp_request_to_send+0x2a>
     86a:	02 97       	sbiw	r24, 0x02	; 2
     86c:	31 f0       	breq	.+12     	; 0x87a <mcp_request_to_send+0x2e>
     86e:	81 e8       	ldi	r24, 0x81	; 129
     870:	05 c0       	rjmp	.+10     	; 0x87c <mcp_request_to_send+0x30>
     872:	81 e8       	ldi	r24, 0x81	; 129
     874:	03 c0       	rjmp	.+6      	; 0x87c <mcp_request_to_send+0x30>
     876:	82 e8       	ldi	r24, 0x82	; 130
     878:	01 c0       	rjmp	.+2      	; 0x87c <mcp_request_to_send+0x30>
     87a:	84 e8       	ldi	r24, 0x84	; 132
     87c:	0e 94 b6 03 	call	0x76c	; 0x76c <spi_write>
     880:	0e 94 a7 03 	call	0x74e	; 0x74e <spi_set_ss>
     884:	df 91       	pop	r29
     886:	cf 91       	pop	r28
     888:	08 95       	ret

0000088a <mcp_set_mode>:
     88a:	48 2f       	mov	r20, r24
     88c:	60 ee       	ldi	r22, 0xE0	; 224
     88e:	8f e0       	ldi	r24, 0x0F	; 15
     890:	0e 94 ee 03 	call	0x7dc	; 0x7dc <mcp_bit_modify>
     894:	08 95       	ret

00000896 <mcp_set_bitrate>:
     896:	80 e8       	ldi	r24, 0x80	; 128
     898:	0e 94 45 04 	call	0x88a	; 0x88a <mcp_set_mode>
     89c:	63 e8       	ldi	r22, 0x83	; 131
     89e:	8a e2       	ldi	r24, 0x2A	; 42
     8a0:	0e 94 da 03 	call	0x7b4	; 0x7b4 <mcp_write>
     8a4:	69 ea       	ldi	r22, 0xA9	; 169
     8a6:	89 e2       	ldi	r24, 0x29	; 41
     8a8:	0e 94 da 03 	call	0x7b4	; 0x7b4 <mcp_write>
     8ac:	66 e0       	ldi	r22, 0x06	; 6
     8ae:	88 e2       	ldi	r24, 0x28	; 40
     8b0:	0e 94 da 03 	call	0x7b4	; 0x7b4 <mcp_write>
     8b4:	08 95       	ret

000008b6 <can_send>:
	char data[8];
	}message_t, *message_ptr;
	
	
	
void can_send(message_ptr message){
     8b6:	0f 93       	push	r16
     8b8:	1f 93       	push	r17
     8ba:	cf 93       	push	r28
     8bc:	df 93       	push	r29
     8be:	8c 01       	movw	r16, r24
	mcp_write(MCP_TXB0SIDH, message->id/8);
     8c0:	fc 01       	movw	r30, r24
     8c2:	60 81       	ld	r22, Z
     8c4:	71 81       	ldd	r23, Z+1	; 0x01
     8c6:	76 95       	lsr	r23
     8c8:	67 95       	ror	r22
     8ca:	76 95       	lsr	r23
     8cc:	67 95       	ror	r22
     8ce:	76 95       	lsr	r23
     8d0:	67 95       	ror	r22
     8d2:	81 e3       	ldi	r24, 0x31	; 49
     8d4:	0e 94 da 03 	call	0x7b4	; 0x7b4 <mcp_write>
	mcp_write(MCP_TXB0SIDL, (message->id%8) << 5);
     8d8:	f8 01       	movw	r30, r16
     8da:	60 81       	ld	r22, Z
     8dc:	62 95       	swap	r22
     8de:	66 0f       	add	r22, r22
     8e0:	60 7e       	andi	r22, 0xE0	; 224
     8e2:	82 e3       	ldi	r24, 0x32	; 50
     8e4:	0e 94 da 03 	call	0x7b4	; 0x7b4 <mcp_write>
	
	mcp_write(MCP_TXB0DLC, message->length);
     8e8:	f8 01       	movw	r30, r16
     8ea:	62 81       	ldd	r22, Z+2	; 0x02
     8ec:	85 e3       	ldi	r24, 0x35	; 53
     8ee:	0e 94 da 03 	call	0x7b4	; 0x7b4 <mcp_write>
	
	for(int i = 0; i<message->length;i++){
     8f2:	c0 e0       	ldi	r28, 0x00	; 0
     8f4:	d0 e0       	ldi	r29, 0x00	; 0
     8f6:	09 c0       	rjmp	.+18     	; 0x90a <can_send+0x54>
		mcp_write(MCP_TXB0D0 + i, message->data[i]);
     8f8:	f8 01       	movw	r30, r16
     8fa:	ec 0f       	add	r30, r28
     8fc:	fd 1f       	adc	r31, r29
     8fe:	63 81       	ldd	r22, Z+3	; 0x03
     900:	8c 2f       	mov	r24, r28
     902:	8a 5c       	subi	r24, 0xCA	; 202
     904:	0e 94 da 03 	call	0x7b4	; 0x7b4 <mcp_write>
	mcp_write(MCP_TXB0SIDH, message->id/8);
	mcp_write(MCP_TXB0SIDL, (message->id%8) << 5);
	
	mcp_write(MCP_TXB0DLC, message->length);
	
	for(int i = 0; i<message->length;i++){
     908:	21 96       	adiw	r28, 0x01	; 1
     90a:	f8 01       	movw	r30, r16
     90c:	82 81       	ldd	r24, Z+2	; 0x02
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	c8 17       	cp	r28, r24
     912:	d9 07       	cpc	r29, r25
     914:	8c f3       	brlt	.-30     	; 0x8f8 <can_send+0x42>
		mcp_write(MCP_TXB0D0 + i, message->data[i]);
	}
	
	mcp_request_to_send(0);
     916:	80 e0       	ldi	r24, 0x00	; 0
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	0e 94 26 04 	call	0x84c	; 0x84c <mcp_request_to_send>
}
     91e:	df 91       	pop	r29
     920:	cf 91       	pop	r28
     922:	1f 91       	pop	r17
     924:	0f 91       	pop	r16
     926:	08 95       	ret

00000928 <can_receive>:

message_t can_receive(){
     928:	0f 93       	push	r16
     92a:	1f 93       	push	r17
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	8c 01       	movw	r16, r24
	message_t message = {};
     932:	8b e0       	ldi	r24, 0x0B	; 11
     934:	f8 01       	movw	r30, r16
     936:	11 92       	st	Z+, r1
     938:	8a 95       	dec	r24
     93a:	e9 f7       	brne	.-6      	; 0x936 <can_receive+0xe>
		if (mcp_read(MCP_CANINTF) & MCP_RX0IF){
     93c:	8c e2       	ldi	r24, 0x2C	; 44
     93e:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     942:	80 ff       	sbrs	r24, 0
     944:	37 c0       	rjmp	.+110    	; 0x9b4 <can_receive+0x8c>
			
			uint8_t id_low = mcp_read(MCP_RXB0SIDL)/0b100000;
     946:	82 e6       	ldi	r24, 0x62	; 98
     948:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     94c:	c8 2f       	mov	r28, r24
     94e:	c2 95       	swap	r28
     950:	c6 95       	lsr	r28
     952:	c7 70       	andi	r28, 0x07	; 7
			uint8_t id_high = mcp_read(MCP_RXB0SIDH);
     954:	81 e6       	ldi	r24, 0x61	; 97
     956:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
			message.id = id_high * 0b1000 + id_low;
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	88 0f       	add	r24, r24
     95e:	99 1f       	adc	r25, r25
     960:	88 0f       	add	r24, r24
     962:	99 1f       	adc	r25, r25
     964:	88 0f       	add	r24, r24
     966:	99 1f       	adc	r25, r25
     968:	8c 0f       	add	r24, r28
     96a:	91 1d       	adc	r25, r1
     96c:	f8 01       	movw	r30, r16
     96e:	91 83       	std	Z+1, r25	; 0x01
     970:	80 83       	st	Z, r24
			
			message.length = mcp_read(MCP_RXB0DLC);
     972:	85 e6       	ldi	r24, 0x65	; 101
     974:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     978:	f8 01       	movw	r30, r16
     97a:	82 83       	std	Z+2, r24	; 0x02
			if(message.length > 7){
     97c:	88 30       	cpi	r24, 0x08	; 8
     97e:	10 f0       	brcs	.+4      	; 0x984 <can_receive+0x5c>
				message.length = 7;
     980:	87 e0       	ldi	r24, 0x07	; 7
     982:	82 83       	std	Z+2, r24	; 0x02
	}
	
	mcp_request_to_send(0);
}

message_t can_receive(){
     984:	c0 e0       	ldi	r28, 0x00	; 0
     986:	d0 e0       	ldi	r29, 0x00	; 0
     988:	0e c0       	rjmp	.+28     	; 0x9a6 <can_receive+0x7e>
				message.length = 7;
			}
			
			for (int i = 0; i < message.length; i++)
			{
				mcp_bit_modify(MCP_CANINTF, 1<<1, 0);
     98a:	40 e0       	ldi	r20, 0x00	; 0
     98c:	62 e0       	ldi	r22, 0x02	; 2
     98e:	8c e2       	ldi	r24, 0x2C	; 44
     990:	0e 94 ee 03 	call	0x7dc	; 0x7dc <mcp_bit_modify>
				message.data[i] = mcp_read(MCP_RXB0D0 + i);
     994:	8c 2f       	mov	r24, r28
     996:	8a 59       	subi	r24, 0x9A	; 154
     998:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     99c:	f8 01       	movw	r30, r16
     99e:	ec 0f       	add	r30, r28
     9a0:	fd 1f       	adc	r31, r29
     9a2:	83 83       	std	Z+3, r24	; 0x03
			message.length = mcp_read(MCP_RXB0DLC);
			if(message.length > 7){
				message.length = 7;
			}
			
			for (int i = 0; i < message.length; i++)
     9a4:	21 96       	adiw	r28, 0x01	; 1
     9a6:	f8 01       	movw	r30, r16
     9a8:	82 81       	ldd	r24, Z+2	; 0x02
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	c8 17       	cp	r28, r24
     9ae:	d9 07       	cpc	r29, r25
     9b0:	64 f3       	brlt	.-40     	; 0x98a <can_receive+0x62>
     9b2:	3b c0       	rjmp	.+118    	; 0xa2a <can_receive+0x102>
				message.data[i] = mcp_read(MCP_RXB0D0 + i);
			}
			
			return message;
		}
		else if (mcp_read(MCP_CANINTF) & MCP_RX1IF){
     9b4:	8c e2       	ldi	r24, 0x2C	; 44
     9b6:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     9ba:	81 ff       	sbrs	r24, 1
     9bc:	36 c0       	rjmp	.+108    	; 0xa2a <can_receive+0x102>
			
			uint8_t id_low = mcp_read(MCP_RXB1SIDL)/0b100000;
     9be:	82 e7       	ldi	r24, 0x72	; 114
     9c0:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     9c4:	c8 2f       	mov	r28, r24
     9c6:	c2 95       	swap	r28
     9c8:	c6 95       	lsr	r28
     9ca:	c7 70       	andi	r28, 0x07	; 7
			uint8_t id_high = mcp_read(MCP_RXB1SIDH);
     9cc:	81 e7       	ldi	r24, 0x71	; 113
     9ce:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
			message.id = id_high * 0b1000 + id_low;
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	88 0f       	add	r24, r24
     9d6:	99 1f       	adc	r25, r25
     9d8:	88 0f       	add	r24, r24
     9da:	99 1f       	adc	r25, r25
     9dc:	88 0f       	add	r24, r24
     9de:	99 1f       	adc	r25, r25
     9e0:	8c 0f       	add	r24, r28
     9e2:	91 1d       	adc	r25, r1
     9e4:	f8 01       	movw	r30, r16
     9e6:	91 83       	std	Z+1, r25	; 0x01
     9e8:	80 83       	st	Z, r24
			
			message.length = mcp_read(MCP_RXB1DLC);
     9ea:	85 e7       	ldi	r24, 0x75	; 117
     9ec:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     9f0:	f8 01       	movw	r30, r16
     9f2:	82 83       	std	Z+2, r24	; 0x02
			if(message.length > 7){
     9f4:	88 30       	cpi	r24, 0x08	; 8
     9f6:	10 f0       	brcs	.+4      	; 0x9fc <can_receive+0xd4>
				message.length = 7;
     9f8:	87 e0       	ldi	r24, 0x07	; 7
     9fa:	82 83       	std	Z+2, r24	; 0x02
	}
	
	mcp_request_to_send(0);
}

message_t can_receive(){
     9fc:	c0 e0       	ldi	r28, 0x00	; 0
     9fe:	d0 e0       	ldi	r29, 0x00	; 0
     a00:	09 c0       	rjmp	.+18     	; 0xa14 <can_receive+0xec>
				message.length = 7;
			}
			
			for (int i = 0; i < message.length; i++)
			{
				message.data[i] = mcp_read(MCP_RXB1D0 + i);
     a02:	8c 2f       	mov	r24, r28
     a04:	8a 58       	subi	r24, 0x8A	; 138
     a06:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     a0a:	f8 01       	movw	r30, r16
     a0c:	ec 0f       	add	r30, r28
     a0e:	fd 1f       	adc	r31, r29
     a10:	83 83       	std	Z+3, r24	; 0x03
			message.length = mcp_read(MCP_RXB1DLC);
			if(message.length > 7){
				message.length = 7;
			}
			
			for (int i = 0; i < message.length; i++)
     a12:	21 96       	adiw	r28, 0x01	; 1
     a14:	f8 01       	movw	r30, r16
     a16:	82 81       	ldd	r24, Z+2	; 0x02
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	c8 17       	cp	r28, r24
     a1c:	d9 07       	cpc	r29, r25
     a1e:	8c f3       	brlt	.-30     	; 0xa02 <can_receive+0xda>
			{
				message.data[i] = mcp_read(MCP_RXB1D0 + i);
			}
			
			mcp_bit_modify(MCP_CANINTF, 1<<1, 0);
     a20:	40 e0       	ldi	r20, 0x00	; 0
     a22:	62 e0       	ldi	r22, 0x02	; 2
     a24:	8c e2       	ldi	r24, 0x2C	; 44
     a26:	0e 94 ee 03 	call	0x7dc	; 0x7dc <mcp_bit_modify>
			return message;
		}
		
	
	
     a2a:	c8 01       	movw	r24, r16
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	1f 91       	pop	r17
     a32:	0f 91       	pop	r16
     a34:	08 95       	ret

00000a36 <main>:
	



int main(void)
{
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	cd b7       	in	r28, 0x3d	; 61
     a3c:	de b7       	in	r29, 0x3e	; 62
     a3e:	ae 97       	sbiw	r28, 0x2e	; 46
     a40:	0f b6       	in	r0, 0x3f	; 63
     a42:	f8 94       	cli
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	cd bf       	out	0x3d, r28	; 61
	UART_Init(MYUBRR);
     a4a:	8f e1       	ldi	r24, 0x1F	; 31
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <UART_Init>
	//SRAM_init();
	//SRAM_test();
	pwm_init();
     a52:	0e 94 63 01 	call	0x2c6	; 0x2c6 <pwm_init>
	adc_init();
     a56:	0e 94 5e 01 	call	0x2bc	; 0x2bc <adc_init>
	oled_init();
     a5a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <oled_init>
	mcp_init();
     a5e:	0e 94 08 04 	call	0x810	; 0x810 <mcp_init>
	mcp_set_bitrate();
     a62:	0e 94 4b 04 	call	0x896	; 0x896 <mcp_set_bitrate>
	printf("\r\nMODE: %x\r\n", mcp_read(MCP_CANSTAT));
     a66:	8e e0       	ldi	r24, 0x0E	; 14
     a68:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     a6c:	1f 92       	push	r1
     a6e:	8f 93       	push	r24
     a70:	06 e8       	ldi	r16, 0x86	; 134
     a72:	11 e0       	ldi	r17, 0x01	; 1
     a74:	1f 93       	push	r17
     a76:	0f 93       	push	r16
     a78:	0e 94 95 08 	call	0x112a	; 0x112a <printf>
	mcp_set_mode(MODE_NORMAL);
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	0e 94 45 04 	call	0x88a	; 0x88a <mcp_set_mode>
	printf("\r\nMODE: %x\r\n", mcp_read(MCP_CANSTAT));
     a82:	8e e0       	ldi	r24, 0x0E	; 14
     a84:	0e 94 c8 03 	call	0x790	; 0x790 <mcp_read>
     a88:	1f 92       	push	r1
     a8a:	8f 93       	push	r24
     a8c:	1f 93       	push	r17
     a8e:	0f 93       	push	r16
     a90:	0e 94 95 08 	call	0x112a	; 0x112a <printf>
	
	
	uint8_t cal[4];
	calibrate(cal);
     a94:	ce 01       	movw	r24, r28
     a96:	01 96       	adiw	r24, 0x01	; 1
     a98:	0e 94 a2 01 	call	0x344	; 0x344 <calibrate>
	oled_write_command(0x20);
     a9c:	80 e2       	ldi	r24, 0x20	; 32
     a9e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
	oled_write_command(0b00);
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <oled_write_command>
	oled_reset();
     aa8:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
	oled_brightness(100); //Brightness of display from 0-100%
     aac:	84 e6       	ldi	r24, 0x64	; 100
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	0e 94 8c 02 	call	0x518	; 0x518 <oled_brightness>
	
	printf("\r\nBEGIN------");
     ab4:	83 e9       	ldi	r24, 0x93	; 147
     ab6:	91 e0       	ldi	r25, 0x01	; 1
     ab8:	9f 93       	push	r25
     aba:	8f 93       	push	r24
     abc:	0e 94 95 08 	call	0x112a	; 0x112a <printf>
	
	DDRB &= ~_BV(PB0);
     ac0:	87 b3       	in	r24, 0x17	; 23
     ac2:	8e 7f       	andi	r24, 0xFE	; 254
     ac4:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~_BV(PB1);
     ac6:	87 b3       	in	r24, 0x17	; 23
     ac8:	8d 7f       	andi	r24, 0xFD	; 253
     aca:	87 bb       	out	0x17, r24	; 23
	
	uint8_t joyarr[2];
	uint8_t slidarr[2];	
	
	message_t message = {
     acc:	8b e0       	ldi	r24, 0x0B	; 11
     ace:	e6 e0       	ldi	r30, 0x06	; 6
     ad0:	f1 e0       	ldi	r31, 0x01	; 1
     ad2:	de 01       	movw	r26, r28
     ad4:	17 96       	adiw	r26, 0x07	; 7
     ad6:	01 90       	ld	r0, Z+
     ad8:	0d 92       	st	X+, r0
     ada:	8a 95       	dec	r24
     adc:	e1 f7       	brne	.-8      	; 0xad6 <main+0xa0>
	};
	
	directions_t currentDir = neutral;
	directions_t previousDir = neutral;
	
	menu_ptr menu = malloc(sizeof(menu_t));
     ade:	86 e0       	ldi	r24, 0x06	; 6
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	0e 94 29 07 	call	0xe52	; 0xe52 <malloc>
     ae6:	8c 01       	movw	r16, r24
	
	menu_ptr menu_highscore = menu_add(menu, "Vis Highscore", &show_highscore);
     ae8:	4f e2       	ldi	r20, 0x2F	; 47
     aea:	53 e0       	ldi	r21, 0x03	; 3
     aec:	61 ea       	ldi	r22, 0xA1	; 161
     aee:	71 e0       	ldi	r23, 0x01	; 1
     af0:	0e 94 65 03 	call	0x6ca	; 0x6ca <menu_add>
     af4:	6c 01       	movw	r12, r24
	menu_ptr menu_play = menu_add(menu, "New Game", &playgame);
     af6:	40 e5       	ldi	r20, 0x50	; 80
     af8:	51 e0       	ldi	r21, 0x01	; 1
     afa:	6f ea       	ldi	r22, 0xAF	; 175
     afc:	71 e0       	ldi	r23, 0x01	; 1
     afe:	c8 01       	movw	r24, r16
     b00:	0e 94 65 03 	call	0x6ca	; 0x6ca <menu_add>
     b04:	9e a7       	std	Y+46, r25	; 0x2e
     b06:	8d a7       	std	Y+45, r24	; 0x2d
	
	menu_ptr Gameloss = menu_add(menu_play, "Gameloss", &game_loss);
     b08:	45 ee       	ldi	r20, 0xE5	; 229
     b0a:	52 e0       	ldi	r21, 0x02	; 2
     b0c:	68 eb       	ldi	r22, 0xB8	; 184
     b0e:	71 e0       	ldi	r23, 0x01	; 1
     b10:	0e 94 65 03 	call	0x6ca	; 0x6ca <menu_add>
     b14:	9a a7       	std	Y+42, r25	; 0x2a
     b16:	89 a7       	std	Y+41, r24	; 0x29
	menu_ptr Gamewon = menu_add(menu_play, "Won game", &won_game);
     b18:	46 ef       	ldi	r20, 0xF6	; 246
     b1a:	52 e0       	ldi	r21, 0x02	; 2
     b1c:	61 ec       	ldi	r22, 0xC1	; 193
     b1e:	71 e0       	ldi	r23, 0x01	; 1
     b20:	8d a5       	ldd	r24, Y+45	; 0x2d
     b22:	9e a5       	ldd	r25, Y+46	; 0x2e
     b24:	0e 94 65 03 	call	0x6ca	; 0x6ca <menu_add>
     b28:	9c a7       	std	Y+44, r25	; 0x2c
     b2a:	8b a7       	std	Y+43, r24	; 0x2b
	menu_ptr Playing = menu_add(menu_play, "Game running", &playing_game);
     b2c:	40 e4       	ldi	r20, 0x40	; 64
     b2e:	53 e0       	ldi	r21, 0x03	; 3
     b30:	6a ec       	ldi	r22, 0xCA	; 202
     b32:	71 e0       	ldi	r23, 0x01	; 1
     b34:	8d a5       	ldd	r24, Y+45	; 0x2d
     b36:	9e a5       	ldd	r25, Y+46	; 0x2e
     b38:	0e 94 65 03 	call	0x6ca	; 0x6ca <menu_add>
     b3c:	2c 01       	movw	r4, r24
	
	
	int arrow_pos=0;
	int acc=0;
	printf("\r\n--------------------\n");
     b3e:	87 ed       	ldi	r24, 0xD7	; 215
     b40:	91 e0       	ldi	r25, 0x01	; 1
     b42:	0e 94 ab 08 	call	0x1156	; 0x1156 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b46:	2f ef       	ldi	r18, 0xFF	; 255
     b48:	8f ef       	ldi	r24, 0xFF	; 255
     b4a:	9e e0       	ldi	r25, 0x0E	; 14
     b4c:	21 50       	subi	r18, 0x01	; 1
     b4e:	80 40       	sbci	r24, 0x00	; 0
     b50:	90 40       	sbci	r25, 0x00	; 0
     b52:	e1 f7       	brne	.-8      	; 0xb4c <main+0x116>
     b54:	00 c0       	rjmp	.+0      	; 0xb56 <main+0x120>
     b56:	00 00       	nop
     b58:	0f b6       	in	r0, 0x3f	; 63
     b5a:	f8 94       	cli
     b5c:	de bf       	out	0x3e, r29	; 62
     b5e:	0f be       	out	0x3f, r0	; 63
     b60:	cd bf       	out	0x3d, r28	; 61
	
	int scored = 0;
	int prev_scored = 0;
     b62:	a1 2c       	mov	r10, r1
     b64:	b1 2c       	mov	r11, r1
	
	int arrow_pos=0;
	int acc=0;
	printf("\r\n--------------------\n");
	
	int scored = 0;
     b66:	e1 2c       	mov	r14, r1
     b68:	f1 2c       	mov	r15, r1
	menu_ptr Gamewon = menu_add(menu_play, "Won game", &won_game);
	menu_ptr Playing = menu_add(menu_play, "Game running", &playing_game);
	
	
	int arrow_pos=0;
	int acc=0;
     b6a:	00 e0       	ldi	r16, 0x00	; 0
     b6c:	10 e0       	ldi	r17, 0x00	; 0
	menu_ptr Gameloss = menu_add(menu_play, "Gameloss", &game_loss);
	menu_ptr Gamewon = menu_add(menu_play, "Won game", &won_game);
	menu_ptr Playing = menu_add(menu_play, "Game running", &playing_game);
	
	
	int arrow_pos=0;
     b6e:	61 2c       	mov	r6, r1
     b70:	71 2c       	mov	r7, r1
		7,
		{0,0,0,0,0,0,0,0}
	};
	
	directions_t currentDir = neutral;
	directions_t previousDir = neutral;
     b72:	b2 e0       	ldi	r27, 0x02	; 2
     b74:	b8 a7       	std	Y+40, r27	; 0x28
		1,
		7,
		{0,0,0,0,0,0,0,0}
	};
	
	directions_t currentDir = neutral;
     b76:	68 94       	set
     b78:	33 24       	eor	r3, r3
     b7a:	31 f8       	bld	r3, 1
	int prev_scored = 0;
	_delay_ms(1000);
	
	
	while(1){
		directions_t dir = direction(cal);
     b7c:	ce 01       	movw	r24, r28
     b7e:	01 96       	adiw	r24, 0x01	; 1
     b80:	0e 94 b6 01 	call	0x36c	; 0x36c <direction>
     b84:	4c 01       	movw	r8, r24
     b86:	ef ef       	ldi	r30, 0xFF	; 255
     b88:	ff e2       	ldi	r31, 0x2F	; 47
     b8a:	31 97       	sbiw	r30, 0x01	; 1
     b8c:	f1 f7       	brne	.-4      	; 0xb8a <main+0x154>
     b8e:	00 c0       	rjmp	.+0      	; 0xb90 <main+0x15a>
     b90:	00 00       	nop
		_delay_ms(10);
		message.data[3] = 1;
     b92:	81 e0       	ldi	r24, 0x01	; 1
     b94:	8d 87       	std	Y+13, r24	; 0x0d
		message.data[0] = 0;
     b96:	1a 86       	std	Y+10, r1	; 0x0a
		message.data[1] = 0;
     b98:	1b 86       	std	Y+11, r1	; 0x0b
		can_send(&message);
     b9a:	ce 01       	movw	r24, r28
     b9c:	07 96       	adiw	r24, 0x07	; 7
     b9e:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <can_send>
			
	
	if (dir != previousDir) {
     ba2:	f8 a5       	ldd	r31, Y+40	; 0x28
     ba4:	f8 15       	cp	r31, r8
     ba6:	21 f1       	breq	.+72     	; 0xbf0 <main+0x1ba>
            // Joystick state has changed
            previousDir = currentDir;

            // Handle state transitions
            switch (dir) {
     ba8:	99 24       	eor	r9, r9
     baa:	21 e0       	ldi	r18, 0x01	; 1
     bac:	82 16       	cp	r8, r18
     bae:	91 04       	cpc	r9, r1
     bb0:	e1 f0       	breq	.+56     	; 0xbea <main+0x1b4>
     bb2:	1c f4       	brge	.+6      	; 0xbba <main+0x184>
     bb4:	89 28       	or	r8, r9
     bb6:	59 f0       	breq	.+22     	; 0xbce <main+0x198>
     bb8:	08 c0       	rjmp	.+16     	; 0xbca <main+0x194>
     bba:	93 e0       	ldi	r25, 0x03	; 3
     bbc:	89 16       	cp	r8, r25
     bbe:	91 04       	cpc	r9, r1
     bc0:	71 f0       	breq	.+28     	; 0xbde <main+0x1a8>
     bc2:	a4 e0       	ldi	r26, 0x04	; 4
     bc4:	8a 16       	cp	r8, r26
     bc6:	91 04       	cpc	r9, r1
     bc8:	29 f0       	breq	.+10     	; 0xbd4 <main+0x19e>
		can_send(&message);
			
	
	if (dir != previousDir) {
            // Joystick state has changed
            previousDir = currentDir;
     bca:	38 a6       	std	Y+40, r3	; 0x28
     bcc:	11 c0       	rjmp	.+34     	; 0xbf0 <main+0x1ba>
     bce:	38 a6       	std	Y+40, r3	; 0x28
            switch (dir) {
                case down:
                    currentDir = down;
                    break;
                case up:
                    currentDir = up;
     bd0:	31 2c       	mov	r3, r1
                    break;
     bd2:	0e c0       	rjmp	.+28     	; 0xbf0 <main+0x1ba>
		can_send(&message);
			
	
	if (dir != previousDir) {
            // Joystick state has changed
            previousDir = currentDir;
     bd4:	38 a6       	std	Y+40, r3	; 0x28
                    break;
                case up:
                    currentDir = up;
                    break;
                case left:
                    currentDir = left;
     bd6:	68 94       	set
     bd8:	33 24       	eor	r3, r3
     bda:	32 f8       	bld	r3, 2
                    break;
     bdc:	09 c0       	rjmp	.+18     	; 0xbf0 <main+0x1ba>
		can_send(&message);
			
	
	if (dir != previousDir) {
            // Joystick state has changed
            previousDir = currentDir;
     bde:	38 a6       	std	Y+40, r3	; 0x28
                    break;
                case left:
                    currentDir = left;
                    break;
                case right:
                    currentDir = right;
     be0:	0f 2e       	mov	r0, r31
     be2:	f3 e0       	ldi	r31, 0x03	; 3
     be4:	3f 2e       	mov	r3, r31
     be6:	f0 2d       	mov	r31, r0
                    break;
     be8:	03 c0       	rjmp	.+6      	; 0xbf0 <main+0x1ba>
		can_send(&message);
			
	
	if (dir != previousDir) {
            // Joystick state has changed
            previousDir = currentDir;
     bea:	38 a6       	std	Y+40, r3	; 0x28

            // Handle state transitions
            switch (dir) {
                case down:
                    currentDir = down;
     bec:	33 24       	eor	r3, r3
     bee:	33 94       	inc	r3
                    break;
            }
        }
	
	
	if (arrow_pos == 0)
     bf0:	61 14       	cp	r6, r1
     bf2:	71 04       	cpc	r7, r1
     bf4:	f9 f4       	brne	.+62     	; 0xc34 <main+0x1fe>
	{
		oled_pos(arrow_pos,0);
     bf6:	60 e0       	ldi	r22, 0x00	; 0
     bf8:	70 e0       	ldi	r23, 0x00	; 0
     bfa:	c3 01       	movw	r24, r6
     bfc:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
		oled_arrow();
     c00:	0e 94 55 03 	call	0x6aa	; 0x6aa <oled_arrow>
		oled_print(menu_highscore->text);	//Moving arrow to the correct menu select line
     c04:	f6 01       	movw	r30, r12
     c06:	80 81       	ld	r24, Z
     c08:	91 81       	ldd	r25, Z+1	; 0x01
     c0a:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
		oled_clear_line(arrow_pos+2);
     c0e:	43 01       	movw	r8, r6
     c10:	f2 e0       	ldi	r31, 0x02	; 2
     c12:	8f 0e       	add	r8, r31
     c14:	91 1c       	adc	r9, r1
     c16:	c4 01       	movw	r24, r8
     c18:	0e 94 77 02 	call	0x4ee	; 0x4ee <oled_clear_line>
		oled_pos(arrow_pos+2,5);
     c1c:	65 e0       	ldi	r22, 0x05	; 5
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	c4 01       	movw	r24, r8
     c22:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
		oled_print(menu_play->text);
     c26:	ad a5       	ldd	r26, Y+45	; 0x2d
     c28:	be a5       	ldd	r27, Y+46	; 0x2e
     c2a:	8d 91       	ld	r24, X+
     c2c:	9c 91       	ld	r25, X
     c2e:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
     c32:	22 c0       	rjmp	.+68     	; 0xc78 <main+0x242>
	}else if (arrow_pos == 2)
     c34:	b2 e0       	ldi	r27, 0x02	; 2
     c36:	6b 16       	cp	r6, r27
     c38:	71 04       	cpc	r7, r1
     c3a:	f1 f4       	brne	.+60     	; 0xc78 <main+0x242>
	{
		oled_clear_line(arrow_pos-2);
     c3c:	43 01       	movw	r8, r6
     c3e:	e2 e0       	ldi	r30, 0x02	; 2
     c40:	8e 1a       	sub	r8, r30
     c42:	91 08       	sbc	r9, r1
     c44:	c4 01       	movw	r24, r8
     c46:	0e 94 77 02 	call	0x4ee	; 0x4ee <oled_clear_line>
		oled_pos(arrow_pos-2,5);
     c4a:	65 e0       	ldi	r22, 0x05	; 5
     c4c:	70 e0       	ldi	r23, 0x00	; 0
     c4e:	c4 01       	movw	r24, r8
     c50:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
		oled_print(menu_highscore->text);	//Moving arrow to the correct menu select line
     c54:	d6 01       	movw	r26, r12
     c56:	8d 91       	ld	r24, X+
     c58:	9c 91       	ld	r25, X
     c5a:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
		oled_pos(arrow_pos,0);
     c5e:	60 e0       	ldi	r22, 0x00	; 0
     c60:	70 e0       	ldi	r23, 0x00	; 0
     c62:	c3 01       	movw	r24, r6
     c64:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
		oled_arrow();
     c68:	0e 94 55 03 	call	0x6aa	; 0x6aa <oled_arrow>
		oled_print(menu_play->text);
     c6c:	ed a5       	ldd	r30, Y+45	; 0x2d
     c6e:	fe a5       	ldd	r31, Y+46	; 0x2e
     c70:	80 81       	ld	r24, Z
     c72:	91 81       	ldd	r25, Z+1	; 0x01
     c74:	0e 94 c6 02 	call	0x58c	; 0x58c <oled_print>
	}	
	
	
	if (currentDir == down && arrow_pos == 0)
     c78:	f1 e0       	ldi	r31, 0x01	; 1
     c7a:	3f 12       	cpse	r3, r31
     c7c:	07 c0       	rjmp	.+14     	; 0xc8c <main+0x256>
     c7e:	61 14       	cp	r6, r1
     c80:	71 04       	cpc	r7, r1
     c82:	21 f4       	brne	.+8      	; 0xc8c <main+0x256>
	{
		arrow_pos=2;
     c84:	68 94       	set
     c86:	66 24       	eor	r6, r6
     c88:	61 f8       	bld	r6, 1
     c8a:	71 2c       	mov	r7, r1
	}
	if (currentDir == up && arrow_pos == 2)
     c8c:	31 10       	cpse	r3, r1
     c8e:	06 c0       	rjmp	.+12     	; 0xc9c <main+0x266>
     c90:	22 e0       	ldi	r18, 0x02	; 2
     c92:	62 16       	cp	r6, r18
     c94:	71 04       	cpc	r7, r1
     c96:	11 f4       	brne	.+4      	; 0xc9c <main+0x266>
	{
		arrow_pos=0;
     c98:	61 2c       	mov	r6, r1
     c9a:	71 2c       	mov	r7, r1
	}
	
	if (PINB & (1 << PB0) && arrow_pos == 0){	//when button pressed and arrow at menu line 0 select option 0
     c9c:	b0 9b       	sbis	0x16, 0	; 22
     c9e:	07 c0       	rjmp	.+14     	; 0xcae <main+0x278>
     ca0:	61 14       	cp	r6, r1
     ca2:	71 04       	cpc	r7, r1
     ca4:	21 f4       	brne	.+8      	; 0xcae <main+0x278>
		acc = 1;
		oled_reset();
     ca6:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
	{
		arrow_pos=0;
	}
	
	if (PINB & (1 << PB0) && arrow_pos == 0){	//when button pressed and arrow at menu line 0 select option 0
		acc = 1;
     caa:	01 e0       	ldi	r16, 0x01	; 1
     cac:	10 e0       	ldi	r17, 0x00	; 0
		oled_reset();
	
	}
	if(PINB & (1 << PB0) && arrow_pos == 2){		//when button pressed and arrow at menu line 2 select option 2
     cae:	b0 9b       	sbis	0x16, 0	; 22
     cb0:	2d c0       	rjmp	.+90     	; 0xd0c <main+0x2d6>
     cb2:	82 e0       	ldi	r24, 0x02	; 2
     cb4:	68 16       	cp	r6, r24
     cb6:	71 04       	cpc	r7, r1
     cb8:	49 f5       	brne	.+82     	; 0xd0c <main+0x2d6>
		acc = 2;
		message.data[3] = 1;		
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	8d 87       	std	Y+13, r24	; 0x0d
		can_send(&message);
     cbe:	ce 01       	movw	r24, r28
     cc0:	07 96       	adiw	r24, 0x07	; 7
     cc2:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <can_send>
		oled_reset();
     cc6:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
     cca:	a0 e0       	ldi	r26, 0x00	; 0
     ccc:	b0 ef       	ldi	r27, 0xF0	; 240
     cce:	11 97       	sbiw	r26, 0x01	; 1
     cd0:	f1 f7       	brne	.-4      	; 0xcce <main+0x298>
		_delay_ms(50);
		score = can_receive();
     cd2:	ce 01       	movw	r24, r28
     cd4:	42 96       	adiw	r24, 0x12	; 18
     cd6:	0e 94 94 04 	call	0x928	; 0x928 <can_receive>
     cda:	e0 e0       	ldi	r30, 0x00	; 0
     cdc:	f0 ef       	ldi	r31, 0xF0	; 240
     cde:	31 97       	sbiw	r30, 0x01	; 1
     ce0:	f1 f7       	brne	.-4      	; 0xcde <main+0x2a8>
		acc = 1;
		oled_reset();
	
	}
	if(PINB & (1 << PB0) && arrow_pos == 2){		//when button pressed and arrow at menu line 2 select option 2
		acc = 2;
     ce2:	02 e0       	ldi	r16, 0x02	; 2
     ce4:	10 e0       	ldi	r17, 0x00	; 0
     ce6:	12 c0       	rjmp	.+36     	; 0xd0c <main+0x2d6>
		
	}
	
	while (acc == 1)
	{
		oled_pos(0,0);
     ce8:	60 e0       	ldi	r22, 0x00	; 0
     cea:	70 e0       	ldi	r23, 0x00	; 0
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 94 3b 02 	call	0x476	; 0x476 <oled_pos>
		menu_highscore->function();
     cf4:	d6 01       	movw	r26, r12
     cf6:	12 96       	adiw	r26, 0x02	; 2
     cf8:	ed 91       	ld	r30, X+
     cfa:	fc 91       	ld	r31, X
     cfc:	13 97       	sbiw	r26, 0x03	; 3
     cfe:	09 95       	icall
		
		if (PINB & (1 << PB1))	//exit menu
     d00:	b1 9b       	sbis	0x16, 1	; 22
     d02:	04 c0       	rjmp	.+8      	; 0xd0c <main+0x2d6>
		{
			acc = 0;
			oled_reset();
     d04:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
		oled_pos(0,0);
		menu_highscore->function();
		
		if (PINB & (1 << PB1))	//exit menu
		{
			acc = 0;
     d08:	00 e0       	ldi	r16, 0x00	; 0
     d0a:	10 e0       	ldi	r17, 0x00	; 0
		score = can_receive();
		_delay_ms(50);
		
	}
	
	while (acc == 1)
     d0c:	01 30       	cpi	r16, 0x01	; 1
     d0e:	11 05       	cpc	r17, r1
     d10:	59 f3       	breq	.-42     	; 0xce8 <main+0x2b2>
     d12:	72 c0       	rjmp	.+228    	; 0xdf8 <main+0x3c2>
			acc = 0;
			oled_reset();
		}
	}
	while (acc == 2){					//playing the game
		joysticks(joyarr);
     d14:	ce 01       	movw	r24, r28
     d16:	05 96       	adiw	r24, 0x05	; 5
     d18:	0e 94 8c 01 	call	0x318	; 0x318 <joysticks>
		message.data[0] = joyarr[0];	//X-AKSE
     d1c:	8d 81       	ldd	r24, Y+5	; 0x05
     d1e:	8a 87       	std	Y+10, r24	; 0x0a
		message.data[1] = joyarr[1];	//Y-AKSE
     d20:	8e 81       	ldd	r24, Y+6	; 0x06
     d22:	8b 87       	std	Y+11, r24	; 0x0b
		can_send(&message);
     d24:	ce 01       	movw	r24, r28
     d26:	07 96       	adiw	r24, 0x07	; 7
     d28:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <can_send>
		score = can_receive();
     d2c:	ce 01       	movw	r24, r28
     d2e:	4d 96       	adiw	r24, 0x1d	; 29
     d30:	0e 94 94 04 	call	0x928	; 0x928 <can_receive>
     d34:	8b e0       	ldi	r24, 0x0B	; 11
     d36:	fe 01       	movw	r30, r28
     d38:	7d 96       	adiw	r30, 0x1d	; 29
     d3a:	de 01       	movw	r26, r28
     d3c:	52 96       	adiw	r26, 0x12	; 18
     d3e:	01 90       	ld	r0, Z+
     d40:	0d 92       	st	X+, r0
     d42:	8a 95       	dec	r24
     d44:	e1 f7       	brne	.-8      	; 0xd3e <main+0x308>
		if (score.data[0] > 0){
     d46:	9d 88       	ldd	r9, Y+21	; 0x15
     d48:	99 20       	and	r9, r9
     d4a:	09 f4       	brne	.+2      	; 0xd4e <main+0x318>
     d4c:	45 c0       	rjmp	.+138    	; 0xdd8 <main+0x3a2>
			if(score.data[1]>= 200){
     d4e:	8e 89       	ldd	r24, Y+22	; 0x16
     d50:	88 3c       	cpi	r24, 0xC8	; 200
     d52:	e8 f0       	brcs	.+58     	; 0xd8e <main+0x358>
				Gameloss->function();
     d54:	a9 a5       	ldd	r26, Y+41	; 0x29
     d56:	ba a5       	ldd	r27, Y+42	; 0x2a
     d58:	12 96       	adiw	r26, 0x02	; 2
     d5a:	ed 91       	ld	r30, X+
     d5c:	fc 91       	ld	r31, X
     d5e:	13 97       	sbiw	r26, 0x03	; 3
     d60:	09 95       	icall
				update_highscore(scored);
     d62:	c7 01       	movw	r24, r14
     d64:	0e 94 97 03 	call	0x72e	; 0x72e <update_highscore>
     d68:	bf ef       	ldi	r27, 0xFF	; 255
     d6a:	ef ef       	ldi	r30, 0xFF	; 255
     d6c:	fd e1       	ldi	r31, 0x1D	; 29
     d6e:	b1 50       	subi	r27, 0x01	; 1
     d70:	e0 40       	sbci	r30, 0x00	; 0
     d72:	f0 40       	sbci	r31, 0x00	; 0
     d74:	e1 f7       	brne	.-8      	; 0xd6e <main+0x338>
     d76:	00 c0       	rjmp	.+0      	; 0xd78 <main+0x342>
     d78:	00 00       	nop
				_delay_ms(2000);
				message.data[0] = 0;
     d7a:	1a 86       	std	Y+10, r1	; 0x0a
				message.data[1] = 0;
     d7c:	1b 86       	std	Y+11, r1	; 0x0b
				can_send(&message);
     d7e:	ce 01       	movw	r24, r28
     d80:	07 96       	adiw	r24, 0x07	; 7
     d82:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <can_send>
				oled_reset();
     d86:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
				acc = 0;
     d8a:	00 e0       	ldi	r16, 0x00	; 0
     d8c:	10 e0       	ldi	r17, 0x00	; 0
			}
			scored = score.data[0];
     d8e:	e9 2c       	mov	r14, r9
     d90:	f1 2c       	mov	r15, r1
			if(prev_scored != scored){
     d92:	ae 14       	cp	r10, r14
     d94:	bf 04       	cpc	r11, r15
     d96:	41 f0       	breq	.+16     	; 0xda8 <main+0x372>
				prev_scored = scored;
				//printf("SCORE: %d\n\r", scored);
				Playing->function(scored);
     d98:	d2 01       	movw	r26, r4
     d9a:	12 96       	adiw	r26, 0x02	; 2
     d9c:	ed 91       	ld	r30, X+
     d9e:	fc 91       	ld	r31, X
     da0:	13 97       	sbiw	r26, 0x03	; 3
     da2:	c7 01       	movw	r24, r14
     da4:	09 95       	icall
				oled_reset();
				acc = 0;
			}
			scored = score.data[0];
			if(prev_scored != scored){
				prev_scored = scored;
     da6:	57 01       	movw	r10, r14
				//printf("SCORE: %d\n\r", scored);
				Playing->function(scored);
			}
			if (scored == 255){
     da8:	bf ef       	ldi	r27, 0xFF	; 255
     daa:	eb 16       	cp	r14, r27
     dac:	f1 04       	cpc	r15, r1
     dae:	a1 f4       	brne	.+40     	; 0xdd8 <main+0x3a2>
				Gamewon->function();
     db0:	ab a5       	ldd	r26, Y+43	; 0x2b
     db2:	bc a5       	ldd	r27, Y+44	; 0x2c
     db4:	12 96       	adiw	r26, 0x02	; 2
     db6:	ed 91       	ld	r30, X+
     db8:	fc 91       	ld	r31, X
     dba:	13 97       	sbiw	r26, 0x03	; 3
     dbc:	09 95       	icall
     dbe:	bf ef       	ldi	r27, 0xFF	; 255
     dc0:	ef ef       	ldi	r30, 0xFF	; 255
     dc2:	fe e0       	ldi	r31, 0x0E	; 14
     dc4:	b1 50       	subi	r27, 0x01	; 1
     dc6:	e0 40       	sbci	r30, 0x00	; 0
     dc8:	f0 40       	sbci	r31, 0x00	; 0
     dca:	e1 f7       	brne	.-8      	; 0xdc4 <main+0x38e>
     dcc:	00 c0       	rjmp	.+0      	; 0xdce <main+0x398>
     dce:	00 00       	nop
				scored = 0;
				_delay_ms(1000);
				oled_reset();
     dd0:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
				//printf("SCORE: %d\n\r", scored);
				Playing->function(scored);
			}
			if (scored == 255){
				Gamewon->function();
				scored = 0;
     dd4:	e1 2c       	mov	r14, r1
     dd6:	f1 2c       	mov	r15, r1
		
		
		
		
		
		if(PINB & (1 << PB1)){
     dd8:	b1 9b       	sbis	0x16, 1	; 22
     dda:	07 c0       	rjmp	.+14     	; 0xdea <main+0x3b4>
			message.data[3] = 1;
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	8d 87       	std	Y+13, r24	; 0x0d
			oled_reset();
     de0:	0e 94 46 02 	call	0x48c	; 0x48c <oled_reset>
			acc = 0;
     de4:	00 e0       	ldi	r16, 0x00	; 0
     de6:	10 e0       	ldi	r17, 0x00	; 0
     de8:	01 c0       	rjmp	.+2      	; 0xdec <main+0x3b6>
		}
		else{
			message.data[3] = 0;
     dea:	1d 86       	std	Y+13, r1	; 0x0d
		}
		if(PINB & (1 << PB0)){
     dec:	b0 9b       	sbis	0x16, 0	; 22
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <main+0x3c0>
			message.data[2] = 1;
     df0:	81 e0       	ldi	r24, 0x01	; 1
     df2:	8c 87       	std	Y+12, r24	; 0x0c
     df4:	01 c0       	rjmp	.+2      	; 0xdf8 <main+0x3c2>
		}
		else{
			message.data[2] = 0;
     df6:	1c 86       	std	Y+12, r1	; 0x0c
		{
			acc = 0;
			oled_reset();
		}
	}
	while (acc == 2){					//playing the game
     df8:	02 30       	cpi	r16, 0x02	; 2
     dfa:	11 05       	cpc	r17, r1
     dfc:	09 f4       	brne	.+2      	; 0xe00 <main+0x3ca>
     dfe:	8a cf       	rjmp	.-236    	; 0xd14 <main+0x2de>
     e00:	bd ce       	rjmp	.-646    	; 0xb7c <main+0x146>

00000e02 <__divmodhi4>:
     e02:	97 fb       	bst	r25, 7
     e04:	07 2e       	mov	r0, r23
     e06:	16 f4       	brtc	.+4      	; 0xe0c <__divmodhi4+0xa>
     e08:	00 94       	com	r0
     e0a:	07 d0       	rcall	.+14     	; 0xe1a <__divmodhi4_neg1>
     e0c:	77 fd       	sbrc	r23, 7
     e0e:	09 d0       	rcall	.+18     	; 0xe22 <__divmodhi4_neg2>
     e10:	0e 94 15 07 	call	0xe2a	; 0xe2a <__udivmodhi4>
     e14:	07 fc       	sbrc	r0, 7
     e16:	05 d0       	rcall	.+10     	; 0xe22 <__divmodhi4_neg2>
     e18:	3e f4       	brtc	.+14     	; 0xe28 <__divmodhi4_exit>

00000e1a <__divmodhi4_neg1>:
     e1a:	90 95       	com	r25
     e1c:	81 95       	neg	r24
     e1e:	9f 4f       	sbci	r25, 0xFF	; 255
     e20:	08 95       	ret

00000e22 <__divmodhi4_neg2>:
     e22:	70 95       	com	r23
     e24:	61 95       	neg	r22
     e26:	7f 4f       	sbci	r23, 0xFF	; 255

00000e28 <__divmodhi4_exit>:
     e28:	08 95       	ret

00000e2a <__udivmodhi4>:
     e2a:	aa 1b       	sub	r26, r26
     e2c:	bb 1b       	sub	r27, r27
     e2e:	51 e1       	ldi	r21, 0x11	; 17
     e30:	07 c0       	rjmp	.+14     	; 0xe40 <__udivmodhi4_ep>

00000e32 <__udivmodhi4_loop>:
     e32:	aa 1f       	adc	r26, r26
     e34:	bb 1f       	adc	r27, r27
     e36:	a6 17       	cp	r26, r22
     e38:	b7 07       	cpc	r27, r23
     e3a:	10 f0       	brcs	.+4      	; 0xe40 <__udivmodhi4_ep>
     e3c:	a6 1b       	sub	r26, r22
     e3e:	b7 0b       	sbc	r27, r23

00000e40 <__udivmodhi4_ep>:
     e40:	88 1f       	adc	r24, r24
     e42:	99 1f       	adc	r25, r25
     e44:	5a 95       	dec	r21
     e46:	a9 f7       	brne	.-22     	; 0xe32 <__udivmodhi4_loop>
     e48:	80 95       	com	r24
     e4a:	90 95       	com	r25
     e4c:	bc 01       	movw	r22, r24
     e4e:	cd 01       	movw	r24, r26
     e50:	08 95       	ret

00000e52 <malloc>:
     e52:	0f 93       	push	r16
     e54:	1f 93       	push	r17
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	91 05       	cpc	r25, r1
     e5e:	10 f4       	brcc	.+4      	; 0xe64 <malloc+0x12>
     e60:	82 e0       	ldi	r24, 0x02	; 2
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <__flp>
     e68:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <__flp+0x1>
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	a0 e0       	ldi	r26, 0x00	; 0
     e72:	b0 e0       	ldi	r27, 0x00	; 0
     e74:	30 97       	sbiw	r30, 0x00	; 0
     e76:	19 f1       	breq	.+70     	; 0xebe <malloc+0x6c>
     e78:	40 81       	ld	r20, Z
     e7a:	51 81       	ldd	r21, Z+1	; 0x01
     e7c:	02 81       	ldd	r16, Z+2	; 0x02
     e7e:	13 81       	ldd	r17, Z+3	; 0x03
     e80:	48 17       	cp	r20, r24
     e82:	59 07       	cpc	r21, r25
     e84:	c8 f0       	brcs	.+50     	; 0xeb8 <malloc+0x66>
     e86:	84 17       	cp	r24, r20
     e88:	95 07       	cpc	r25, r21
     e8a:	69 f4       	brne	.+26     	; 0xea6 <malloc+0x54>
     e8c:	10 97       	sbiw	r26, 0x00	; 0
     e8e:	31 f0       	breq	.+12     	; 0xe9c <malloc+0x4a>
     e90:	12 96       	adiw	r26, 0x02	; 2
     e92:	0c 93       	st	X, r16
     e94:	12 97       	sbiw	r26, 0x02	; 2
     e96:	13 96       	adiw	r26, 0x03	; 3
     e98:	1c 93       	st	X, r17
     e9a:	27 c0       	rjmp	.+78     	; 0xeea <malloc+0x98>
     e9c:	00 93 f4 01 	sts	0x01F4, r16	; 0x8001f4 <__flp>
     ea0:	10 93 f5 01 	sts	0x01F5, r17	; 0x8001f5 <__flp+0x1>
     ea4:	22 c0       	rjmp	.+68     	; 0xeea <malloc+0x98>
     ea6:	21 15       	cp	r18, r1
     ea8:	31 05       	cpc	r19, r1
     eaa:	19 f0       	breq	.+6      	; 0xeb2 <malloc+0x60>
     eac:	42 17       	cp	r20, r18
     eae:	53 07       	cpc	r21, r19
     eb0:	18 f4       	brcc	.+6      	; 0xeb8 <malloc+0x66>
     eb2:	9a 01       	movw	r18, r20
     eb4:	bd 01       	movw	r22, r26
     eb6:	ef 01       	movw	r28, r30
     eb8:	df 01       	movw	r26, r30
     eba:	f8 01       	movw	r30, r16
     ebc:	db cf       	rjmp	.-74     	; 0xe74 <malloc+0x22>
     ebe:	21 15       	cp	r18, r1
     ec0:	31 05       	cpc	r19, r1
     ec2:	f9 f0       	breq	.+62     	; 0xf02 <malloc+0xb0>
     ec4:	28 1b       	sub	r18, r24
     ec6:	39 0b       	sbc	r19, r25
     ec8:	24 30       	cpi	r18, 0x04	; 4
     eca:	31 05       	cpc	r19, r1
     ecc:	80 f4       	brcc	.+32     	; 0xeee <malloc+0x9c>
     ece:	8a 81       	ldd	r24, Y+2	; 0x02
     ed0:	9b 81       	ldd	r25, Y+3	; 0x03
     ed2:	61 15       	cp	r22, r1
     ed4:	71 05       	cpc	r23, r1
     ed6:	21 f0       	breq	.+8      	; 0xee0 <malloc+0x8e>
     ed8:	fb 01       	movw	r30, r22
     eda:	93 83       	std	Z+3, r25	; 0x03
     edc:	82 83       	std	Z+2, r24	; 0x02
     ede:	04 c0       	rjmp	.+8      	; 0xee8 <malloc+0x96>
     ee0:	90 93 f5 01 	sts	0x01F5, r25	; 0x8001f5 <__flp+0x1>
     ee4:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <__flp>
     ee8:	fe 01       	movw	r30, r28
     eea:	32 96       	adiw	r30, 0x02	; 2
     eec:	44 c0       	rjmp	.+136    	; 0xf76 <malloc+0x124>
     eee:	fe 01       	movw	r30, r28
     ef0:	e2 0f       	add	r30, r18
     ef2:	f3 1f       	adc	r31, r19
     ef4:	81 93       	st	Z+, r24
     ef6:	91 93       	st	Z+, r25
     ef8:	22 50       	subi	r18, 0x02	; 2
     efa:	31 09       	sbc	r19, r1
     efc:	39 83       	std	Y+1, r19	; 0x01
     efe:	28 83       	st	Y, r18
     f00:	3a c0       	rjmp	.+116    	; 0xf76 <malloc+0x124>
     f02:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <__brkval>
     f06:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <__brkval+0x1>
     f0a:	23 2b       	or	r18, r19
     f0c:	41 f4       	brne	.+16     	; 0xf1e <malloc+0xcc>
     f0e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     f12:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     f16:	30 93 f3 01 	sts	0x01F3, r19	; 0x8001f3 <__brkval+0x1>
     f1a:	20 93 f2 01 	sts	0x01F2, r18	; 0x8001f2 <__brkval>
     f1e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f22:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f26:	21 15       	cp	r18, r1
     f28:	31 05       	cpc	r19, r1
     f2a:	41 f4       	brne	.+16     	; 0xf3c <malloc+0xea>
     f2c:	2d b7       	in	r18, 0x3d	; 61
     f2e:	3e b7       	in	r19, 0x3e	; 62
     f30:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     f34:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     f38:	24 1b       	sub	r18, r20
     f3a:	35 0b       	sbc	r19, r21
     f3c:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__brkval>
     f40:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <__brkval+0x1>
     f44:	e2 17       	cp	r30, r18
     f46:	f3 07       	cpc	r31, r19
     f48:	a0 f4       	brcc	.+40     	; 0xf72 <malloc+0x120>
     f4a:	2e 1b       	sub	r18, r30
     f4c:	3f 0b       	sbc	r19, r31
     f4e:	28 17       	cp	r18, r24
     f50:	39 07       	cpc	r19, r25
     f52:	78 f0       	brcs	.+30     	; 0xf72 <malloc+0x120>
     f54:	ac 01       	movw	r20, r24
     f56:	4e 5f       	subi	r20, 0xFE	; 254
     f58:	5f 4f       	sbci	r21, 0xFF	; 255
     f5a:	24 17       	cp	r18, r20
     f5c:	35 07       	cpc	r19, r21
     f5e:	48 f0       	brcs	.+18     	; 0xf72 <malloc+0x120>
     f60:	4e 0f       	add	r20, r30
     f62:	5f 1f       	adc	r21, r31
     f64:	50 93 f3 01 	sts	0x01F3, r21	; 0x8001f3 <__brkval+0x1>
     f68:	40 93 f2 01 	sts	0x01F2, r20	; 0x8001f2 <__brkval>
     f6c:	81 93       	st	Z+, r24
     f6e:	91 93       	st	Z+, r25
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <malloc+0x124>
     f72:	e0 e0       	ldi	r30, 0x00	; 0
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	cf 01       	movw	r24, r30
     f78:	df 91       	pop	r29
     f7a:	cf 91       	pop	r28
     f7c:	1f 91       	pop	r17
     f7e:	0f 91       	pop	r16
     f80:	08 95       	ret

00000f82 <free>:
     f82:	cf 93       	push	r28
     f84:	df 93       	push	r29
     f86:	00 97       	sbiw	r24, 0x00	; 0
     f88:	09 f4       	brne	.+2      	; 0xf8c <free+0xa>
     f8a:	81 c0       	rjmp	.+258    	; 0x108e <free+0x10c>
     f8c:	fc 01       	movw	r30, r24
     f8e:	32 97       	sbiw	r30, 0x02	; 2
     f90:	13 82       	std	Z+3, r1	; 0x03
     f92:	12 82       	std	Z+2, r1	; 0x02
     f94:	a0 91 f4 01 	lds	r26, 0x01F4	; 0x8001f4 <__flp>
     f98:	b0 91 f5 01 	lds	r27, 0x01F5	; 0x8001f5 <__flp+0x1>
     f9c:	10 97       	sbiw	r26, 0x00	; 0
     f9e:	81 f4       	brne	.+32     	; 0xfc0 <free+0x3e>
     fa0:	20 81       	ld	r18, Z
     fa2:	31 81       	ldd	r19, Z+1	; 0x01
     fa4:	82 0f       	add	r24, r18
     fa6:	93 1f       	adc	r25, r19
     fa8:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <__brkval>
     fac:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <__brkval+0x1>
     fb0:	28 17       	cp	r18, r24
     fb2:	39 07       	cpc	r19, r25
     fb4:	51 f5       	brne	.+84     	; 0x100a <free+0x88>
     fb6:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__brkval+0x1>
     fba:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__brkval>
     fbe:	67 c0       	rjmp	.+206    	; 0x108e <free+0x10c>
     fc0:	ed 01       	movw	r28, r26
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	ce 17       	cp	r28, r30
     fc8:	df 07       	cpc	r29, r31
     fca:	40 f4       	brcc	.+16     	; 0xfdc <free+0x5a>
     fcc:	4a 81       	ldd	r20, Y+2	; 0x02
     fce:	5b 81       	ldd	r21, Y+3	; 0x03
     fd0:	9e 01       	movw	r18, r28
     fd2:	41 15       	cp	r20, r1
     fd4:	51 05       	cpc	r21, r1
     fd6:	f1 f0       	breq	.+60     	; 0x1014 <free+0x92>
     fd8:	ea 01       	movw	r28, r20
     fda:	f5 cf       	rjmp	.-22     	; 0xfc6 <free+0x44>
     fdc:	d3 83       	std	Z+3, r29	; 0x03
     fde:	c2 83       	std	Z+2, r28	; 0x02
     fe0:	40 81       	ld	r20, Z
     fe2:	51 81       	ldd	r21, Z+1	; 0x01
     fe4:	84 0f       	add	r24, r20
     fe6:	95 1f       	adc	r25, r21
     fe8:	c8 17       	cp	r28, r24
     fea:	d9 07       	cpc	r29, r25
     fec:	59 f4       	brne	.+22     	; 0x1004 <free+0x82>
     fee:	88 81       	ld	r24, Y
     ff0:	99 81       	ldd	r25, Y+1	; 0x01
     ff2:	84 0f       	add	r24, r20
     ff4:	95 1f       	adc	r25, r21
     ff6:	02 96       	adiw	r24, 0x02	; 2
     ff8:	91 83       	std	Z+1, r25	; 0x01
     ffa:	80 83       	st	Z, r24
     ffc:	8a 81       	ldd	r24, Y+2	; 0x02
     ffe:	9b 81       	ldd	r25, Y+3	; 0x03
    1000:	93 83       	std	Z+3, r25	; 0x03
    1002:	82 83       	std	Z+2, r24	; 0x02
    1004:	21 15       	cp	r18, r1
    1006:	31 05       	cpc	r19, r1
    1008:	29 f4       	brne	.+10     	; 0x1014 <free+0x92>
    100a:	f0 93 f5 01 	sts	0x01F5, r31	; 0x8001f5 <__flp+0x1>
    100e:	e0 93 f4 01 	sts	0x01F4, r30	; 0x8001f4 <__flp>
    1012:	3d c0       	rjmp	.+122    	; 0x108e <free+0x10c>
    1014:	e9 01       	movw	r28, r18
    1016:	fb 83       	std	Y+3, r31	; 0x03
    1018:	ea 83       	std	Y+2, r30	; 0x02
    101a:	49 91       	ld	r20, Y+
    101c:	59 91       	ld	r21, Y+
    101e:	c4 0f       	add	r28, r20
    1020:	d5 1f       	adc	r29, r21
    1022:	ec 17       	cp	r30, r28
    1024:	fd 07       	cpc	r31, r29
    1026:	61 f4       	brne	.+24     	; 0x1040 <free+0xbe>
    1028:	80 81       	ld	r24, Z
    102a:	91 81       	ldd	r25, Z+1	; 0x01
    102c:	84 0f       	add	r24, r20
    102e:	95 1f       	adc	r25, r21
    1030:	02 96       	adiw	r24, 0x02	; 2
    1032:	e9 01       	movw	r28, r18
    1034:	99 83       	std	Y+1, r25	; 0x01
    1036:	88 83       	st	Y, r24
    1038:	82 81       	ldd	r24, Z+2	; 0x02
    103a:	93 81       	ldd	r25, Z+3	; 0x03
    103c:	9b 83       	std	Y+3, r25	; 0x03
    103e:	8a 83       	std	Y+2, r24	; 0x02
    1040:	e0 e0       	ldi	r30, 0x00	; 0
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	12 96       	adiw	r26, 0x02	; 2
    1046:	8d 91       	ld	r24, X+
    1048:	9c 91       	ld	r25, X
    104a:	13 97       	sbiw	r26, 0x03	; 3
    104c:	00 97       	sbiw	r24, 0x00	; 0
    104e:	19 f0       	breq	.+6      	; 0x1056 <free+0xd4>
    1050:	fd 01       	movw	r30, r26
    1052:	dc 01       	movw	r26, r24
    1054:	f7 cf       	rjmp	.-18     	; 0x1044 <free+0xc2>
    1056:	8d 91       	ld	r24, X+
    1058:	9c 91       	ld	r25, X
    105a:	11 97       	sbiw	r26, 0x01	; 1
    105c:	9d 01       	movw	r18, r26
    105e:	2e 5f       	subi	r18, 0xFE	; 254
    1060:	3f 4f       	sbci	r19, 0xFF	; 255
    1062:	82 0f       	add	r24, r18
    1064:	93 1f       	adc	r25, r19
    1066:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <__brkval>
    106a:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <__brkval+0x1>
    106e:	28 17       	cp	r18, r24
    1070:	39 07       	cpc	r19, r25
    1072:	69 f4       	brne	.+26     	; 0x108e <free+0x10c>
    1074:	30 97       	sbiw	r30, 0x00	; 0
    1076:	29 f4       	brne	.+10     	; 0x1082 <free+0x100>
    1078:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <__flp+0x1>
    107c:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <__flp>
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <free+0x104>
    1082:	13 82       	std	Z+3, r1	; 0x03
    1084:	12 82       	std	Z+2, r1	; 0x02
    1086:	b0 93 f3 01 	sts	0x01F3, r27	; 0x8001f3 <__brkval+0x1>
    108a:	a0 93 f2 01 	sts	0x01F2, r26	; 0x8001f2 <__brkval>
    108e:	df 91       	pop	r29
    1090:	cf 91       	pop	r28
    1092:	08 95       	ret

00001094 <fdevopen>:
    1094:	0f 93       	push	r16
    1096:	1f 93       	push	r17
    1098:	cf 93       	push	r28
    109a:	df 93       	push	r29
    109c:	00 97       	sbiw	r24, 0x00	; 0
    109e:	31 f4       	brne	.+12     	; 0x10ac <fdevopen+0x18>
    10a0:	61 15       	cp	r22, r1
    10a2:	71 05       	cpc	r23, r1
    10a4:	19 f4       	brne	.+6      	; 0x10ac <fdevopen+0x18>
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	3a c0       	rjmp	.+116    	; 0x1120 <fdevopen+0x8c>
    10ac:	8b 01       	movw	r16, r22
    10ae:	ec 01       	movw	r28, r24
    10b0:	6e e0       	ldi	r22, 0x0E	; 14
    10b2:	70 e0       	ldi	r23, 0x00	; 0
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	0e 94 de 0a 	call	0x15bc	; 0x15bc <calloc>
    10bc:	fc 01       	movw	r30, r24
    10be:	89 2b       	or	r24, r25
    10c0:	91 f3       	breq	.-28     	; 0x10a6 <fdevopen+0x12>
    10c2:	80 e8       	ldi	r24, 0x80	; 128
    10c4:	83 83       	std	Z+3, r24	; 0x03
    10c6:	01 15       	cp	r16, r1
    10c8:	11 05       	cpc	r17, r1
    10ca:	71 f0       	breq	.+28     	; 0x10e8 <fdevopen+0x54>
    10cc:	13 87       	std	Z+11, r17	; 0x0b
    10ce:	02 87       	std	Z+10, r16	; 0x0a
    10d0:	81 e8       	ldi	r24, 0x81	; 129
    10d2:	83 83       	std	Z+3, r24	; 0x03
    10d4:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <__iob>
    10d8:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <__iob+0x1>
    10dc:	89 2b       	or	r24, r25
    10de:	21 f4       	brne	.+8      	; 0x10e8 <fdevopen+0x54>
    10e0:	f0 93 f7 01 	sts	0x01F7, r31	; 0x8001f7 <__iob+0x1>
    10e4:	e0 93 f6 01 	sts	0x01F6, r30	; 0x8001f6 <__iob>
    10e8:	20 97       	sbiw	r28, 0x00	; 0
    10ea:	c9 f0       	breq	.+50     	; 0x111e <fdevopen+0x8a>
    10ec:	d1 87       	std	Z+9, r29	; 0x09
    10ee:	c0 87       	std	Z+8, r28	; 0x08
    10f0:	83 81       	ldd	r24, Z+3	; 0x03
    10f2:	82 60       	ori	r24, 0x02	; 2
    10f4:	83 83       	std	Z+3, r24	; 0x03
    10f6:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__iob+0x2>
    10fa:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__iob+0x3>
    10fe:	89 2b       	or	r24, r25
    1100:	71 f4       	brne	.+28     	; 0x111e <fdevopen+0x8a>
    1102:	f0 93 f9 01 	sts	0x01F9, r31	; 0x8001f9 <__iob+0x3>
    1106:	e0 93 f8 01 	sts	0x01F8, r30	; 0x8001f8 <__iob+0x2>
    110a:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__iob+0x4>
    110e:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <__iob+0x5>
    1112:	89 2b       	or	r24, r25
    1114:	21 f4       	brne	.+8      	; 0x111e <fdevopen+0x8a>
    1116:	f0 93 fb 01 	sts	0x01FB, r31	; 0x8001fb <__iob+0x5>
    111a:	e0 93 fa 01 	sts	0x01FA, r30	; 0x8001fa <__iob+0x4>
    111e:	cf 01       	movw	r24, r30
    1120:	df 91       	pop	r29
    1122:	cf 91       	pop	r28
    1124:	1f 91       	pop	r17
    1126:	0f 91       	pop	r16
    1128:	08 95       	ret

0000112a <printf>:
    112a:	a0 e0       	ldi	r26, 0x00	; 0
    112c:	b0 e0       	ldi	r27, 0x00	; 0
    112e:	eb e9       	ldi	r30, 0x9B	; 155
    1130:	f8 e0       	ldi	r31, 0x08	; 8
    1132:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__prologue_saves__+0x20>
    1136:	ae 01       	movw	r20, r28
    1138:	4b 5f       	subi	r20, 0xFB	; 251
    113a:	5f 4f       	sbci	r21, 0xFF	; 255
    113c:	fa 01       	movw	r30, r20
    113e:	61 91       	ld	r22, Z+
    1140:	71 91       	ld	r23, Z+
    1142:	af 01       	movw	r20, r30
    1144:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__iob+0x2>
    1148:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__iob+0x3>
    114c:	0e 94 fd 08 	call	0x11fa	; 0x11fa <vfprintf>
    1150:	e2 e0       	ldi	r30, 0x02	; 2
    1152:	0c 94 dd 0b 	jmp	0x17ba	; 0x17ba <__epilogue_restores__+0x20>

00001156 <puts>:
    1156:	0f 93       	push	r16
    1158:	1f 93       	push	r17
    115a:	cf 93       	push	r28
    115c:	df 93       	push	r29
    115e:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <__iob+0x2>
    1162:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <__iob+0x3>
    1166:	23 81       	ldd	r18, Z+3	; 0x03
    1168:	21 ff       	sbrs	r18, 1
    116a:	1b c0       	rjmp	.+54     	; 0x11a2 <puts+0x4c>
    116c:	8c 01       	movw	r16, r24
    116e:	d0 e0       	ldi	r29, 0x00	; 0
    1170:	c0 e0       	ldi	r28, 0x00	; 0
    1172:	f8 01       	movw	r30, r16
    1174:	81 91       	ld	r24, Z+
    1176:	8f 01       	movw	r16, r30
    1178:	60 91 f8 01 	lds	r22, 0x01F8	; 0x8001f8 <__iob+0x2>
    117c:	70 91 f9 01 	lds	r23, 0x01F9	; 0x8001f9 <__iob+0x3>
    1180:	db 01       	movw	r26, r22
    1182:	18 96       	adiw	r26, 0x08	; 8
    1184:	ed 91       	ld	r30, X+
    1186:	fc 91       	ld	r31, X
    1188:	19 97       	sbiw	r26, 0x09	; 9
    118a:	88 23       	and	r24, r24
    118c:	31 f0       	breq	.+12     	; 0x119a <puts+0x44>
    118e:	09 95       	icall
    1190:	89 2b       	or	r24, r25
    1192:	79 f3       	breq	.-34     	; 0x1172 <puts+0x1c>
    1194:	df ef       	ldi	r29, 0xFF	; 255
    1196:	cf ef       	ldi	r28, 0xFF	; 255
    1198:	ec cf       	rjmp	.-40     	; 0x1172 <puts+0x1c>
    119a:	8a e0       	ldi	r24, 0x0A	; 10
    119c:	09 95       	icall
    119e:	89 2b       	or	r24, r25
    11a0:	19 f0       	breq	.+6      	; 0x11a8 <puts+0x52>
    11a2:	8f ef       	ldi	r24, 0xFF	; 255
    11a4:	9f ef       	ldi	r25, 0xFF	; 255
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <puts+0x56>
    11a8:	8d 2f       	mov	r24, r29
    11aa:	9c 2f       	mov	r25, r28
    11ac:	df 91       	pop	r29
    11ae:	cf 91       	pop	r28
    11b0:	1f 91       	pop	r17
    11b2:	0f 91       	pop	r16
    11b4:	08 95       	ret

000011b6 <sprintf>:
    11b6:	ae e0       	ldi	r26, 0x0E	; 14
    11b8:	b0 e0       	ldi	r27, 0x00	; 0
    11ba:	e1 ee       	ldi	r30, 0xE1	; 225
    11bc:	f8 e0       	ldi	r31, 0x08	; 8
    11be:	0c 94 bf 0b 	jmp	0x177e	; 0x177e <__prologue_saves__+0x1c>
    11c2:	0d 89       	ldd	r16, Y+21	; 0x15
    11c4:	1e 89       	ldd	r17, Y+22	; 0x16
    11c6:	86 e0       	ldi	r24, 0x06	; 6
    11c8:	8c 83       	std	Y+4, r24	; 0x04
    11ca:	1a 83       	std	Y+2, r17	; 0x02
    11cc:	09 83       	std	Y+1, r16	; 0x01
    11ce:	8f ef       	ldi	r24, 0xFF	; 255
    11d0:	9f e7       	ldi	r25, 0x7F	; 127
    11d2:	9e 83       	std	Y+6, r25	; 0x06
    11d4:	8d 83       	std	Y+5, r24	; 0x05
    11d6:	ae 01       	movw	r20, r28
    11d8:	47 5e       	subi	r20, 0xE7	; 231
    11da:	5f 4f       	sbci	r21, 0xFF	; 255
    11dc:	6f 89       	ldd	r22, Y+23	; 0x17
    11de:	78 8d       	ldd	r23, Y+24	; 0x18
    11e0:	ce 01       	movw	r24, r28
    11e2:	01 96       	adiw	r24, 0x01	; 1
    11e4:	0e 94 fd 08 	call	0x11fa	; 0x11fa <vfprintf>
    11e8:	ef 81       	ldd	r30, Y+7	; 0x07
    11ea:	f8 85       	ldd	r31, Y+8	; 0x08
    11ec:	e0 0f       	add	r30, r16
    11ee:	f1 1f       	adc	r31, r17
    11f0:	10 82       	st	Z, r1
    11f2:	2e 96       	adiw	r28, 0x0e	; 14
    11f4:	e4 e0       	ldi	r30, 0x04	; 4
    11f6:	0c 94 db 0b 	jmp	0x17b6	; 0x17b6 <__epilogue_restores__+0x1c>

000011fa <vfprintf>:
    11fa:	ab e0       	ldi	r26, 0x0B	; 11
    11fc:	b0 e0       	ldi	r27, 0x00	; 0
    11fe:	e3 e0       	ldi	r30, 0x03	; 3
    1200:	f9 e0       	ldi	r31, 0x09	; 9
    1202:	0c 94 b1 0b 	jmp	0x1762	; 0x1762 <__prologue_saves__>
    1206:	6c 01       	movw	r12, r24
    1208:	7b 01       	movw	r14, r22
    120a:	8a 01       	movw	r16, r20
    120c:	fc 01       	movw	r30, r24
    120e:	17 82       	std	Z+7, r1	; 0x07
    1210:	16 82       	std	Z+6, r1	; 0x06
    1212:	83 81       	ldd	r24, Z+3	; 0x03
    1214:	81 ff       	sbrs	r24, 1
    1216:	cc c1       	rjmp	.+920    	; 0x15b0 <vfprintf+0x3b6>
    1218:	ce 01       	movw	r24, r28
    121a:	01 96       	adiw	r24, 0x01	; 1
    121c:	3c 01       	movw	r6, r24
    121e:	f6 01       	movw	r30, r12
    1220:	93 81       	ldd	r25, Z+3	; 0x03
    1222:	f7 01       	movw	r30, r14
    1224:	93 fd       	sbrc	r25, 3
    1226:	85 91       	lpm	r24, Z+
    1228:	93 ff       	sbrs	r25, 3
    122a:	81 91       	ld	r24, Z+
    122c:	7f 01       	movw	r14, r30
    122e:	88 23       	and	r24, r24
    1230:	09 f4       	brne	.+2      	; 0x1234 <vfprintf+0x3a>
    1232:	ba c1       	rjmp	.+884    	; 0x15a8 <vfprintf+0x3ae>
    1234:	85 32       	cpi	r24, 0x25	; 37
    1236:	39 f4       	brne	.+14     	; 0x1246 <vfprintf+0x4c>
    1238:	93 fd       	sbrc	r25, 3
    123a:	85 91       	lpm	r24, Z+
    123c:	93 ff       	sbrs	r25, 3
    123e:	81 91       	ld	r24, Z+
    1240:	7f 01       	movw	r14, r30
    1242:	85 32       	cpi	r24, 0x25	; 37
    1244:	29 f4       	brne	.+10     	; 0x1250 <vfprintf+0x56>
    1246:	b6 01       	movw	r22, r12
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    124e:	e7 cf       	rjmp	.-50     	; 0x121e <vfprintf+0x24>
    1250:	91 2c       	mov	r9, r1
    1252:	21 2c       	mov	r2, r1
    1254:	31 2c       	mov	r3, r1
    1256:	ff e1       	ldi	r31, 0x1F	; 31
    1258:	f3 15       	cp	r31, r3
    125a:	d8 f0       	brcs	.+54     	; 0x1292 <vfprintf+0x98>
    125c:	8b 32       	cpi	r24, 0x2B	; 43
    125e:	79 f0       	breq	.+30     	; 0x127e <vfprintf+0x84>
    1260:	38 f4       	brcc	.+14     	; 0x1270 <vfprintf+0x76>
    1262:	80 32       	cpi	r24, 0x20	; 32
    1264:	79 f0       	breq	.+30     	; 0x1284 <vfprintf+0x8a>
    1266:	83 32       	cpi	r24, 0x23	; 35
    1268:	a1 f4       	brne	.+40     	; 0x1292 <vfprintf+0x98>
    126a:	23 2d       	mov	r18, r3
    126c:	20 61       	ori	r18, 0x10	; 16
    126e:	1d c0       	rjmp	.+58     	; 0x12aa <vfprintf+0xb0>
    1270:	8d 32       	cpi	r24, 0x2D	; 45
    1272:	61 f0       	breq	.+24     	; 0x128c <vfprintf+0x92>
    1274:	80 33       	cpi	r24, 0x30	; 48
    1276:	69 f4       	brne	.+26     	; 0x1292 <vfprintf+0x98>
    1278:	23 2d       	mov	r18, r3
    127a:	21 60       	ori	r18, 0x01	; 1
    127c:	16 c0       	rjmp	.+44     	; 0x12aa <vfprintf+0xb0>
    127e:	83 2d       	mov	r24, r3
    1280:	82 60       	ori	r24, 0x02	; 2
    1282:	38 2e       	mov	r3, r24
    1284:	e3 2d       	mov	r30, r3
    1286:	e4 60       	ori	r30, 0x04	; 4
    1288:	3e 2e       	mov	r3, r30
    128a:	2a c0       	rjmp	.+84     	; 0x12e0 <vfprintf+0xe6>
    128c:	f3 2d       	mov	r31, r3
    128e:	f8 60       	ori	r31, 0x08	; 8
    1290:	1d c0       	rjmp	.+58     	; 0x12cc <vfprintf+0xd2>
    1292:	37 fc       	sbrc	r3, 7
    1294:	2d c0       	rjmp	.+90     	; 0x12f0 <vfprintf+0xf6>
    1296:	20 ed       	ldi	r18, 0xD0	; 208
    1298:	28 0f       	add	r18, r24
    129a:	2a 30       	cpi	r18, 0x0A	; 10
    129c:	40 f0       	brcs	.+16     	; 0x12ae <vfprintf+0xb4>
    129e:	8e 32       	cpi	r24, 0x2E	; 46
    12a0:	b9 f4       	brne	.+46     	; 0x12d0 <vfprintf+0xd6>
    12a2:	36 fc       	sbrc	r3, 6
    12a4:	81 c1       	rjmp	.+770    	; 0x15a8 <vfprintf+0x3ae>
    12a6:	23 2d       	mov	r18, r3
    12a8:	20 64       	ori	r18, 0x40	; 64
    12aa:	32 2e       	mov	r3, r18
    12ac:	19 c0       	rjmp	.+50     	; 0x12e0 <vfprintf+0xe6>
    12ae:	36 fe       	sbrs	r3, 6
    12b0:	06 c0       	rjmp	.+12     	; 0x12be <vfprintf+0xc4>
    12b2:	8a e0       	ldi	r24, 0x0A	; 10
    12b4:	98 9e       	mul	r9, r24
    12b6:	20 0d       	add	r18, r0
    12b8:	11 24       	eor	r1, r1
    12ba:	92 2e       	mov	r9, r18
    12bc:	11 c0       	rjmp	.+34     	; 0x12e0 <vfprintf+0xe6>
    12be:	ea e0       	ldi	r30, 0x0A	; 10
    12c0:	2e 9e       	mul	r2, r30
    12c2:	20 0d       	add	r18, r0
    12c4:	11 24       	eor	r1, r1
    12c6:	22 2e       	mov	r2, r18
    12c8:	f3 2d       	mov	r31, r3
    12ca:	f0 62       	ori	r31, 0x20	; 32
    12cc:	3f 2e       	mov	r3, r31
    12ce:	08 c0       	rjmp	.+16     	; 0x12e0 <vfprintf+0xe6>
    12d0:	8c 36       	cpi	r24, 0x6C	; 108
    12d2:	21 f4       	brne	.+8      	; 0x12dc <vfprintf+0xe2>
    12d4:	83 2d       	mov	r24, r3
    12d6:	80 68       	ori	r24, 0x80	; 128
    12d8:	38 2e       	mov	r3, r24
    12da:	02 c0       	rjmp	.+4      	; 0x12e0 <vfprintf+0xe6>
    12dc:	88 36       	cpi	r24, 0x68	; 104
    12de:	41 f4       	brne	.+16     	; 0x12f0 <vfprintf+0xf6>
    12e0:	f7 01       	movw	r30, r14
    12e2:	93 fd       	sbrc	r25, 3
    12e4:	85 91       	lpm	r24, Z+
    12e6:	93 ff       	sbrs	r25, 3
    12e8:	81 91       	ld	r24, Z+
    12ea:	7f 01       	movw	r14, r30
    12ec:	81 11       	cpse	r24, r1
    12ee:	b3 cf       	rjmp	.-154    	; 0x1256 <vfprintf+0x5c>
    12f0:	98 2f       	mov	r25, r24
    12f2:	9f 7d       	andi	r25, 0xDF	; 223
    12f4:	95 54       	subi	r25, 0x45	; 69
    12f6:	93 30       	cpi	r25, 0x03	; 3
    12f8:	28 f4       	brcc	.+10     	; 0x1304 <vfprintf+0x10a>
    12fa:	0c 5f       	subi	r16, 0xFC	; 252
    12fc:	1f 4f       	sbci	r17, 0xFF	; 255
    12fe:	9f e3       	ldi	r25, 0x3F	; 63
    1300:	99 83       	std	Y+1, r25	; 0x01
    1302:	0d c0       	rjmp	.+26     	; 0x131e <vfprintf+0x124>
    1304:	83 36       	cpi	r24, 0x63	; 99
    1306:	31 f0       	breq	.+12     	; 0x1314 <vfprintf+0x11a>
    1308:	83 37       	cpi	r24, 0x73	; 115
    130a:	71 f0       	breq	.+28     	; 0x1328 <vfprintf+0x12e>
    130c:	83 35       	cpi	r24, 0x53	; 83
    130e:	09 f0       	breq	.+2      	; 0x1312 <vfprintf+0x118>
    1310:	59 c0       	rjmp	.+178    	; 0x13c4 <vfprintf+0x1ca>
    1312:	21 c0       	rjmp	.+66     	; 0x1356 <vfprintf+0x15c>
    1314:	f8 01       	movw	r30, r16
    1316:	80 81       	ld	r24, Z
    1318:	89 83       	std	Y+1, r24	; 0x01
    131a:	0e 5f       	subi	r16, 0xFE	; 254
    131c:	1f 4f       	sbci	r17, 0xFF	; 255
    131e:	88 24       	eor	r8, r8
    1320:	83 94       	inc	r8
    1322:	91 2c       	mov	r9, r1
    1324:	53 01       	movw	r10, r6
    1326:	13 c0       	rjmp	.+38     	; 0x134e <vfprintf+0x154>
    1328:	28 01       	movw	r4, r16
    132a:	f2 e0       	ldi	r31, 0x02	; 2
    132c:	4f 0e       	add	r4, r31
    132e:	51 1c       	adc	r5, r1
    1330:	f8 01       	movw	r30, r16
    1332:	a0 80       	ld	r10, Z
    1334:	b1 80       	ldd	r11, Z+1	; 0x01
    1336:	36 fe       	sbrs	r3, 6
    1338:	03 c0       	rjmp	.+6      	; 0x1340 <vfprintf+0x146>
    133a:	69 2d       	mov	r22, r9
    133c:	70 e0       	ldi	r23, 0x00	; 0
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <vfprintf+0x14a>
    1340:	6f ef       	ldi	r22, 0xFF	; 255
    1342:	7f ef       	ldi	r23, 0xFF	; 255
    1344:	c5 01       	movw	r24, r10
    1346:	0e 94 0c 0b 	call	0x1618	; 0x1618 <strnlen>
    134a:	4c 01       	movw	r8, r24
    134c:	82 01       	movw	r16, r4
    134e:	f3 2d       	mov	r31, r3
    1350:	ff 77       	andi	r31, 0x7F	; 127
    1352:	3f 2e       	mov	r3, r31
    1354:	16 c0       	rjmp	.+44     	; 0x1382 <vfprintf+0x188>
    1356:	28 01       	movw	r4, r16
    1358:	22 e0       	ldi	r18, 0x02	; 2
    135a:	42 0e       	add	r4, r18
    135c:	51 1c       	adc	r5, r1
    135e:	f8 01       	movw	r30, r16
    1360:	a0 80       	ld	r10, Z
    1362:	b1 80       	ldd	r11, Z+1	; 0x01
    1364:	36 fe       	sbrs	r3, 6
    1366:	03 c0       	rjmp	.+6      	; 0x136e <vfprintf+0x174>
    1368:	69 2d       	mov	r22, r9
    136a:	70 e0       	ldi	r23, 0x00	; 0
    136c:	02 c0       	rjmp	.+4      	; 0x1372 <vfprintf+0x178>
    136e:	6f ef       	ldi	r22, 0xFF	; 255
    1370:	7f ef       	ldi	r23, 0xFF	; 255
    1372:	c5 01       	movw	r24, r10
    1374:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <strnlen_P>
    1378:	4c 01       	movw	r8, r24
    137a:	f3 2d       	mov	r31, r3
    137c:	f0 68       	ori	r31, 0x80	; 128
    137e:	3f 2e       	mov	r3, r31
    1380:	82 01       	movw	r16, r4
    1382:	33 fc       	sbrc	r3, 3
    1384:	1b c0       	rjmp	.+54     	; 0x13bc <vfprintf+0x1c2>
    1386:	82 2d       	mov	r24, r2
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	88 16       	cp	r8, r24
    138c:	99 06       	cpc	r9, r25
    138e:	b0 f4       	brcc	.+44     	; 0x13bc <vfprintf+0x1c2>
    1390:	b6 01       	movw	r22, r12
    1392:	80 e2       	ldi	r24, 0x20	; 32
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    139a:	2a 94       	dec	r2
    139c:	f4 cf       	rjmp	.-24     	; 0x1386 <vfprintf+0x18c>
    139e:	f5 01       	movw	r30, r10
    13a0:	37 fc       	sbrc	r3, 7
    13a2:	85 91       	lpm	r24, Z+
    13a4:	37 fe       	sbrs	r3, 7
    13a6:	81 91       	ld	r24, Z+
    13a8:	5f 01       	movw	r10, r30
    13aa:	b6 01       	movw	r22, r12
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    13b2:	21 10       	cpse	r2, r1
    13b4:	2a 94       	dec	r2
    13b6:	21 e0       	ldi	r18, 0x01	; 1
    13b8:	82 1a       	sub	r8, r18
    13ba:	91 08       	sbc	r9, r1
    13bc:	81 14       	cp	r8, r1
    13be:	91 04       	cpc	r9, r1
    13c0:	71 f7       	brne	.-36     	; 0x139e <vfprintf+0x1a4>
    13c2:	e8 c0       	rjmp	.+464    	; 0x1594 <vfprintf+0x39a>
    13c4:	84 36       	cpi	r24, 0x64	; 100
    13c6:	11 f0       	breq	.+4      	; 0x13cc <vfprintf+0x1d2>
    13c8:	89 36       	cpi	r24, 0x69	; 105
    13ca:	41 f5       	brne	.+80     	; 0x141c <vfprintf+0x222>
    13cc:	f8 01       	movw	r30, r16
    13ce:	37 fe       	sbrs	r3, 7
    13d0:	07 c0       	rjmp	.+14     	; 0x13e0 <vfprintf+0x1e6>
    13d2:	60 81       	ld	r22, Z
    13d4:	71 81       	ldd	r23, Z+1	; 0x01
    13d6:	82 81       	ldd	r24, Z+2	; 0x02
    13d8:	93 81       	ldd	r25, Z+3	; 0x03
    13da:	0c 5f       	subi	r16, 0xFC	; 252
    13dc:	1f 4f       	sbci	r17, 0xFF	; 255
    13de:	08 c0       	rjmp	.+16     	; 0x13f0 <vfprintf+0x1f6>
    13e0:	60 81       	ld	r22, Z
    13e2:	71 81       	ldd	r23, Z+1	; 0x01
    13e4:	07 2e       	mov	r0, r23
    13e6:	00 0c       	add	r0, r0
    13e8:	88 0b       	sbc	r24, r24
    13ea:	99 0b       	sbc	r25, r25
    13ec:	0e 5f       	subi	r16, 0xFE	; 254
    13ee:	1f 4f       	sbci	r17, 0xFF	; 255
    13f0:	f3 2d       	mov	r31, r3
    13f2:	ff 76       	andi	r31, 0x6F	; 111
    13f4:	3f 2e       	mov	r3, r31
    13f6:	97 ff       	sbrs	r25, 7
    13f8:	09 c0       	rjmp	.+18     	; 0x140c <vfprintf+0x212>
    13fa:	90 95       	com	r25
    13fc:	80 95       	com	r24
    13fe:	70 95       	com	r23
    1400:	61 95       	neg	r22
    1402:	7f 4f       	sbci	r23, 0xFF	; 255
    1404:	8f 4f       	sbci	r24, 0xFF	; 255
    1406:	9f 4f       	sbci	r25, 0xFF	; 255
    1408:	f0 68       	ori	r31, 0x80	; 128
    140a:	3f 2e       	mov	r3, r31
    140c:	2a e0       	ldi	r18, 0x0A	; 10
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	a3 01       	movw	r20, r6
    1412:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <__ultoa_invert>
    1416:	88 2e       	mov	r8, r24
    1418:	86 18       	sub	r8, r6
    141a:	45 c0       	rjmp	.+138    	; 0x14a6 <vfprintf+0x2ac>
    141c:	85 37       	cpi	r24, 0x75	; 117
    141e:	31 f4       	brne	.+12     	; 0x142c <vfprintf+0x232>
    1420:	23 2d       	mov	r18, r3
    1422:	2f 7e       	andi	r18, 0xEF	; 239
    1424:	b2 2e       	mov	r11, r18
    1426:	2a e0       	ldi	r18, 0x0A	; 10
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	25 c0       	rjmp	.+74     	; 0x1476 <vfprintf+0x27c>
    142c:	93 2d       	mov	r25, r3
    142e:	99 7f       	andi	r25, 0xF9	; 249
    1430:	b9 2e       	mov	r11, r25
    1432:	8f 36       	cpi	r24, 0x6F	; 111
    1434:	c1 f0       	breq	.+48     	; 0x1466 <vfprintf+0x26c>
    1436:	18 f4       	brcc	.+6      	; 0x143e <vfprintf+0x244>
    1438:	88 35       	cpi	r24, 0x58	; 88
    143a:	79 f0       	breq	.+30     	; 0x145a <vfprintf+0x260>
    143c:	b5 c0       	rjmp	.+362    	; 0x15a8 <vfprintf+0x3ae>
    143e:	80 37       	cpi	r24, 0x70	; 112
    1440:	19 f0       	breq	.+6      	; 0x1448 <vfprintf+0x24e>
    1442:	88 37       	cpi	r24, 0x78	; 120
    1444:	21 f0       	breq	.+8      	; 0x144e <vfprintf+0x254>
    1446:	b0 c0       	rjmp	.+352    	; 0x15a8 <vfprintf+0x3ae>
    1448:	e9 2f       	mov	r30, r25
    144a:	e0 61       	ori	r30, 0x10	; 16
    144c:	be 2e       	mov	r11, r30
    144e:	b4 fe       	sbrs	r11, 4
    1450:	0d c0       	rjmp	.+26     	; 0x146c <vfprintf+0x272>
    1452:	fb 2d       	mov	r31, r11
    1454:	f4 60       	ori	r31, 0x04	; 4
    1456:	bf 2e       	mov	r11, r31
    1458:	09 c0       	rjmp	.+18     	; 0x146c <vfprintf+0x272>
    145a:	34 fe       	sbrs	r3, 4
    145c:	0a c0       	rjmp	.+20     	; 0x1472 <vfprintf+0x278>
    145e:	29 2f       	mov	r18, r25
    1460:	26 60       	ori	r18, 0x06	; 6
    1462:	b2 2e       	mov	r11, r18
    1464:	06 c0       	rjmp	.+12     	; 0x1472 <vfprintf+0x278>
    1466:	28 e0       	ldi	r18, 0x08	; 8
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	05 c0       	rjmp	.+10     	; 0x1476 <vfprintf+0x27c>
    146c:	20 e1       	ldi	r18, 0x10	; 16
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	02 c0       	rjmp	.+4      	; 0x1476 <vfprintf+0x27c>
    1472:	20 e1       	ldi	r18, 0x10	; 16
    1474:	32 e0       	ldi	r19, 0x02	; 2
    1476:	f8 01       	movw	r30, r16
    1478:	b7 fe       	sbrs	r11, 7
    147a:	07 c0       	rjmp	.+14     	; 0x148a <vfprintf+0x290>
    147c:	60 81       	ld	r22, Z
    147e:	71 81       	ldd	r23, Z+1	; 0x01
    1480:	82 81       	ldd	r24, Z+2	; 0x02
    1482:	93 81       	ldd	r25, Z+3	; 0x03
    1484:	0c 5f       	subi	r16, 0xFC	; 252
    1486:	1f 4f       	sbci	r17, 0xFF	; 255
    1488:	06 c0       	rjmp	.+12     	; 0x1496 <vfprintf+0x29c>
    148a:	60 81       	ld	r22, Z
    148c:	71 81       	ldd	r23, Z+1	; 0x01
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	0e 5f       	subi	r16, 0xFE	; 254
    1494:	1f 4f       	sbci	r17, 0xFF	; 255
    1496:	a3 01       	movw	r20, r6
    1498:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <__ultoa_invert>
    149c:	88 2e       	mov	r8, r24
    149e:	86 18       	sub	r8, r6
    14a0:	fb 2d       	mov	r31, r11
    14a2:	ff 77       	andi	r31, 0x7F	; 127
    14a4:	3f 2e       	mov	r3, r31
    14a6:	36 fe       	sbrs	r3, 6
    14a8:	0d c0       	rjmp	.+26     	; 0x14c4 <vfprintf+0x2ca>
    14aa:	23 2d       	mov	r18, r3
    14ac:	2e 7f       	andi	r18, 0xFE	; 254
    14ae:	a2 2e       	mov	r10, r18
    14b0:	89 14       	cp	r8, r9
    14b2:	58 f4       	brcc	.+22     	; 0x14ca <vfprintf+0x2d0>
    14b4:	34 fe       	sbrs	r3, 4
    14b6:	0b c0       	rjmp	.+22     	; 0x14ce <vfprintf+0x2d4>
    14b8:	32 fc       	sbrc	r3, 2
    14ba:	09 c0       	rjmp	.+18     	; 0x14ce <vfprintf+0x2d4>
    14bc:	83 2d       	mov	r24, r3
    14be:	8e 7e       	andi	r24, 0xEE	; 238
    14c0:	a8 2e       	mov	r10, r24
    14c2:	05 c0       	rjmp	.+10     	; 0x14ce <vfprintf+0x2d4>
    14c4:	b8 2c       	mov	r11, r8
    14c6:	a3 2c       	mov	r10, r3
    14c8:	03 c0       	rjmp	.+6      	; 0x14d0 <vfprintf+0x2d6>
    14ca:	b8 2c       	mov	r11, r8
    14cc:	01 c0       	rjmp	.+2      	; 0x14d0 <vfprintf+0x2d6>
    14ce:	b9 2c       	mov	r11, r9
    14d0:	a4 fe       	sbrs	r10, 4
    14d2:	0f c0       	rjmp	.+30     	; 0x14f2 <vfprintf+0x2f8>
    14d4:	fe 01       	movw	r30, r28
    14d6:	e8 0d       	add	r30, r8
    14d8:	f1 1d       	adc	r31, r1
    14da:	80 81       	ld	r24, Z
    14dc:	80 33       	cpi	r24, 0x30	; 48
    14de:	21 f4       	brne	.+8      	; 0x14e8 <vfprintf+0x2ee>
    14e0:	9a 2d       	mov	r25, r10
    14e2:	99 7e       	andi	r25, 0xE9	; 233
    14e4:	a9 2e       	mov	r10, r25
    14e6:	09 c0       	rjmp	.+18     	; 0x14fa <vfprintf+0x300>
    14e8:	a2 fe       	sbrs	r10, 2
    14ea:	06 c0       	rjmp	.+12     	; 0x14f8 <vfprintf+0x2fe>
    14ec:	b3 94       	inc	r11
    14ee:	b3 94       	inc	r11
    14f0:	04 c0       	rjmp	.+8      	; 0x14fa <vfprintf+0x300>
    14f2:	8a 2d       	mov	r24, r10
    14f4:	86 78       	andi	r24, 0x86	; 134
    14f6:	09 f0       	breq	.+2      	; 0x14fa <vfprintf+0x300>
    14f8:	b3 94       	inc	r11
    14fa:	a3 fc       	sbrc	r10, 3
    14fc:	11 c0       	rjmp	.+34     	; 0x1520 <vfprintf+0x326>
    14fe:	a0 fe       	sbrs	r10, 0
    1500:	06 c0       	rjmp	.+12     	; 0x150e <vfprintf+0x314>
    1502:	b2 14       	cp	r11, r2
    1504:	88 f4       	brcc	.+34     	; 0x1528 <vfprintf+0x32e>
    1506:	28 0c       	add	r2, r8
    1508:	92 2c       	mov	r9, r2
    150a:	9b 18       	sub	r9, r11
    150c:	0e c0       	rjmp	.+28     	; 0x152a <vfprintf+0x330>
    150e:	b2 14       	cp	r11, r2
    1510:	60 f4       	brcc	.+24     	; 0x152a <vfprintf+0x330>
    1512:	b6 01       	movw	r22, r12
    1514:	80 e2       	ldi	r24, 0x20	; 32
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    151c:	b3 94       	inc	r11
    151e:	f7 cf       	rjmp	.-18     	; 0x150e <vfprintf+0x314>
    1520:	b2 14       	cp	r11, r2
    1522:	18 f4       	brcc	.+6      	; 0x152a <vfprintf+0x330>
    1524:	2b 18       	sub	r2, r11
    1526:	02 c0       	rjmp	.+4      	; 0x152c <vfprintf+0x332>
    1528:	98 2c       	mov	r9, r8
    152a:	21 2c       	mov	r2, r1
    152c:	a4 fe       	sbrs	r10, 4
    152e:	10 c0       	rjmp	.+32     	; 0x1550 <vfprintf+0x356>
    1530:	b6 01       	movw	r22, r12
    1532:	80 e3       	ldi	r24, 0x30	; 48
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    153a:	a2 fe       	sbrs	r10, 2
    153c:	17 c0       	rjmp	.+46     	; 0x156c <vfprintf+0x372>
    153e:	a1 fc       	sbrc	r10, 1
    1540:	03 c0       	rjmp	.+6      	; 0x1548 <vfprintf+0x34e>
    1542:	88 e7       	ldi	r24, 0x78	; 120
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	02 c0       	rjmp	.+4      	; 0x154c <vfprintf+0x352>
    1548:	88 e5       	ldi	r24, 0x58	; 88
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	b6 01       	movw	r22, r12
    154e:	0c c0       	rjmp	.+24     	; 0x1568 <vfprintf+0x36e>
    1550:	8a 2d       	mov	r24, r10
    1552:	86 78       	andi	r24, 0x86	; 134
    1554:	59 f0       	breq	.+22     	; 0x156c <vfprintf+0x372>
    1556:	a1 fe       	sbrs	r10, 1
    1558:	02 c0       	rjmp	.+4      	; 0x155e <vfprintf+0x364>
    155a:	8b e2       	ldi	r24, 0x2B	; 43
    155c:	01 c0       	rjmp	.+2      	; 0x1560 <vfprintf+0x366>
    155e:	80 e2       	ldi	r24, 0x20	; 32
    1560:	a7 fc       	sbrc	r10, 7
    1562:	8d e2       	ldi	r24, 0x2D	; 45
    1564:	b6 01       	movw	r22, r12
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    156c:	89 14       	cp	r8, r9
    156e:	38 f4       	brcc	.+14     	; 0x157e <vfprintf+0x384>
    1570:	b6 01       	movw	r22, r12
    1572:	80 e3       	ldi	r24, 0x30	; 48
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    157a:	9a 94       	dec	r9
    157c:	f7 cf       	rjmp	.-18     	; 0x156c <vfprintf+0x372>
    157e:	8a 94       	dec	r8
    1580:	f3 01       	movw	r30, r6
    1582:	e8 0d       	add	r30, r8
    1584:	f1 1d       	adc	r31, r1
    1586:	80 81       	ld	r24, Z
    1588:	b6 01       	movw	r22, r12
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    1590:	81 10       	cpse	r8, r1
    1592:	f5 cf       	rjmp	.-22     	; 0x157e <vfprintf+0x384>
    1594:	22 20       	and	r2, r2
    1596:	09 f4       	brne	.+2      	; 0x159a <vfprintf+0x3a0>
    1598:	42 ce       	rjmp	.-892    	; 0x121e <vfprintf+0x24>
    159a:	b6 01       	movw	r22, r12
    159c:	80 e2       	ldi	r24, 0x20	; 32
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	0e 94 17 0b 	call	0x162e	; 0x162e <fputc>
    15a4:	2a 94       	dec	r2
    15a6:	f6 cf       	rjmp	.-20     	; 0x1594 <vfprintf+0x39a>
    15a8:	f6 01       	movw	r30, r12
    15aa:	86 81       	ldd	r24, Z+6	; 0x06
    15ac:	97 81       	ldd	r25, Z+7	; 0x07
    15ae:	02 c0       	rjmp	.+4      	; 0x15b4 <vfprintf+0x3ba>
    15b0:	8f ef       	ldi	r24, 0xFF	; 255
    15b2:	9f ef       	ldi	r25, 0xFF	; 255
    15b4:	2b 96       	adiw	r28, 0x0b	; 11
    15b6:	e2 e1       	ldi	r30, 0x12	; 18
    15b8:	0c 94 cd 0b 	jmp	0x179a	; 0x179a <__epilogue_restores__>

000015bc <calloc>:
    15bc:	0f 93       	push	r16
    15be:	1f 93       	push	r17
    15c0:	cf 93       	push	r28
    15c2:	df 93       	push	r29
    15c4:	86 9f       	mul	r24, r22
    15c6:	80 01       	movw	r16, r0
    15c8:	87 9f       	mul	r24, r23
    15ca:	10 0d       	add	r17, r0
    15cc:	96 9f       	mul	r25, r22
    15ce:	10 0d       	add	r17, r0
    15d0:	11 24       	eor	r1, r1
    15d2:	c8 01       	movw	r24, r16
    15d4:	0e 94 29 07 	call	0xe52	; 0xe52 <malloc>
    15d8:	ec 01       	movw	r28, r24
    15da:	00 97       	sbiw	r24, 0x00	; 0
    15dc:	29 f0       	breq	.+10     	; 0x15e8 <calloc+0x2c>
    15de:	a8 01       	movw	r20, r16
    15e0:	60 e0       	ldi	r22, 0x00	; 0
    15e2:	70 e0       	ldi	r23, 0x00	; 0
    15e4:	0e 94 05 0b 	call	0x160a	; 0x160a <memset>
    15e8:	ce 01       	movw	r24, r28
    15ea:	df 91       	pop	r29
    15ec:	cf 91       	pop	r28
    15ee:	1f 91       	pop	r17
    15f0:	0f 91       	pop	r16
    15f2:	08 95       	ret

000015f4 <strnlen_P>:
    15f4:	fc 01       	movw	r30, r24
    15f6:	05 90       	lpm	r0, Z+
    15f8:	61 50       	subi	r22, 0x01	; 1
    15fa:	70 40       	sbci	r23, 0x00	; 0
    15fc:	01 10       	cpse	r0, r1
    15fe:	d8 f7       	brcc	.-10     	; 0x15f6 <strnlen_P+0x2>
    1600:	80 95       	com	r24
    1602:	90 95       	com	r25
    1604:	8e 0f       	add	r24, r30
    1606:	9f 1f       	adc	r25, r31
    1608:	08 95       	ret

0000160a <memset>:
    160a:	dc 01       	movw	r26, r24
    160c:	01 c0       	rjmp	.+2      	; 0x1610 <memset+0x6>
    160e:	6d 93       	st	X+, r22
    1610:	41 50       	subi	r20, 0x01	; 1
    1612:	50 40       	sbci	r21, 0x00	; 0
    1614:	e0 f7       	brcc	.-8      	; 0x160e <memset+0x4>
    1616:	08 95       	ret

00001618 <strnlen>:
    1618:	fc 01       	movw	r30, r24
    161a:	61 50       	subi	r22, 0x01	; 1
    161c:	70 40       	sbci	r23, 0x00	; 0
    161e:	01 90       	ld	r0, Z+
    1620:	01 10       	cpse	r0, r1
    1622:	d8 f7       	brcc	.-10     	; 0x161a <strnlen+0x2>
    1624:	80 95       	com	r24
    1626:	90 95       	com	r25
    1628:	8e 0f       	add	r24, r30
    162a:	9f 1f       	adc	r25, r31
    162c:	08 95       	ret

0000162e <fputc>:
    162e:	0f 93       	push	r16
    1630:	1f 93       	push	r17
    1632:	cf 93       	push	r28
    1634:	df 93       	push	r29
    1636:	fb 01       	movw	r30, r22
    1638:	23 81       	ldd	r18, Z+3	; 0x03
    163a:	21 fd       	sbrc	r18, 1
    163c:	03 c0       	rjmp	.+6      	; 0x1644 <fputc+0x16>
    163e:	8f ef       	ldi	r24, 0xFF	; 255
    1640:	9f ef       	ldi	r25, 0xFF	; 255
    1642:	2c c0       	rjmp	.+88     	; 0x169c <fputc+0x6e>
    1644:	22 ff       	sbrs	r18, 2
    1646:	16 c0       	rjmp	.+44     	; 0x1674 <fputc+0x46>
    1648:	46 81       	ldd	r20, Z+6	; 0x06
    164a:	57 81       	ldd	r21, Z+7	; 0x07
    164c:	24 81       	ldd	r18, Z+4	; 0x04
    164e:	35 81       	ldd	r19, Z+5	; 0x05
    1650:	42 17       	cp	r20, r18
    1652:	53 07       	cpc	r21, r19
    1654:	44 f4       	brge	.+16     	; 0x1666 <fputc+0x38>
    1656:	a0 81       	ld	r26, Z
    1658:	b1 81       	ldd	r27, Z+1	; 0x01
    165a:	9d 01       	movw	r18, r26
    165c:	2f 5f       	subi	r18, 0xFF	; 255
    165e:	3f 4f       	sbci	r19, 0xFF	; 255
    1660:	31 83       	std	Z+1, r19	; 0x01
    1662:	20 83       	st	Z, r18
    1664:	8c 93       	st	X, r24
    1666:	26 81       	ldd	r18, Z+6	; 0x06
    1668:	37 81       	ldd	r19, Z+7	; 0x07
    166a:	2f 5f       	subi	r18, 0xFF	; 255
    166c:	3f 4f       	sbci	r19, 0xFF	; 255
    166e:	37 83       	std	Z+7, r19	; 0x07
    1670:	26 83       	std	Z+6, r18	; 0x06
    1672:	14 c0       	rjmp	.+40     	; 0x169c <fputc+0x6e>
    1674:	8b 01       	movw	r16, r22
    1676:	ec 01       	movw	r28, r24
    1678:	fb 01       	movw	r30, r22
    167a:	00 84       	ldd	r0, Z+8	; 0x08
    167c:	f1 85       	ldd	r31, Z+9	; 0x09
    167e:	e0 2d       	mov	r30, r0
    1680:	09 95       	icall
    1682:	89 2b       	or	r24, r25
    1684:	e1 f6       	brne	.-72     	; 0x163e <fputc+0x10>
    1686:	d8 01       	movw	r26, r16
    1688:	16 96       	adiw	r26, 0x06	; 6
    168a:	8d 91       	ld	r24, X+
    168c:	9c 91       	ld	r25, X
    168e:	17 97       	sbiw	r26, 0x07	; 7
    1690:	01 96       	adiw	r24, 0x01	; 1
    1692:	17 96       	adiw	r26, 0x07	; 7
    1694:	9c 93       	st	X, r25
    1696:	8e 93       	st	-X, r24
    1698:	16 97       	sbiw	r26, 0x06	; 6
    169a:	ce 01       	movw	r24, r28
    169c:	df 91       	pop	r29
    169e:	cf 91       	pop	r28
    16a0:	1f 91       	pop	r17
    16a2:	0f 91       	pop	r16
    16a4:	08 95       	ret

000016a6 <__ultoa_invert>:
    16a6:	fa 01       	movw	r30, r20
    16a8:	aa 27       	eor	r26, r26
    16aa:	28 30       	cpi	r18, 0x08	; 8
    16ac:	51 f1       	breq	.+84     	; 0x1702 <__ultoa_invert+0x5c>
    16ae:	20 31       	cpi	r18, 0x10	; 16
    16b0:	81 f1       	breq	.+96     	; 0x1712 <__ultoa_invert+0x6c>
    16b2:	e8 94       	clt
    16b4:	6f 93       	push	r22
    16b6:	6e 7f       	andi	r22, 0xFE	; 254
    16b8:	6e 5f       	subi	r22, 0xFE	; 254
    16ba:	7f 4f       	sbci	r23, 0xFF	; 255
    16bc:	8f 4f       	sbci	r24, 0xFF	; 255
    16be:	9f 4f       	sbci	r25, 0xFF	; 255
    16c0:	af 4f       	sbci	r26, 0xFF	; 255
    16c2:	b1 e0       	ldi	r27, 0x01	; 1
    16c4:	3e d0       	rcall	.+124    	; 0x1742 <__ultoa_invert+0x9c>
    16c6:	b4 e0       	ldi	r27, 0x04	; 4
    16c8:	3c d0       	rcall	.+120    	; 0x1742 <__ultoa_invert+0x9c>
    16ca:	67 0f       	add	r22, r23
    16cc:	78 1f       	adc	r23, r24
    16ce:	89 1f       	adc	r24, r25
    16d0:	9a 1f       	adc	r25, r26
    16d2:	a1 1d       	adc	r26, r1
    16d4:	68 0f       	add	r22, r24
    16d6:	79 1f       	adc	r23, r25
    16d8:	8a 1f       	adc	r24, r26
    16da:	91 1d       	adc	r25, r1
    16dc:	a1 1d       	adc	r26, r1
    16de:	6a 0f       	add	r22, r26
    16e0:	71 1d       	adc	r23, r1
    16e2:	81 1d       	adc	r24, r1
    16e4:	91 1d       	adc	r25, r1
    16e6:	a1 1d       	adc	r26, r1
    16e8:	20 d0       	rcall	.+64     	; 0x172a <__ultoa_invert+0x84>
    16ea:	09 f4       	brne	.+2      	; 0x16ee <__ultoa_invert+0x48>
    16ec:	68 94       	set
    16ee:	3f 91       	pop	r19
    16f0:	2a e0       	ldi	r18, 0x0A	; 10
    16f2:	26 9f       	mul	r18, r22
    16f4:	11 24       	eor	r1, r1
    16f6:	30 19       	sub	r19, r0
    16f8:	30 5d       	subi	r19, 0xD0	; 208
    16fa:	31 93       	st	Z+, r19
    16fc:	de f6       	brtc	.-74     	; 0x16b4 <__ultoa_invert+0xe>
    16fe:	cf 01       	movw	r24, r30
    1700:	08 95       	ret
    1702:	46 2f       	mov	r20, r22
    1704:	47 70       	andi	r20, 0x07	; 7
    1706:	40 5d       	subi	r20, 0xD0	; 208
    1708:	41 93       	st	Z+, r20
    170a:	b3 e0       	ldi	r27, 0x03	; 3
    170c:	0f d0       	rcall	.+30     	; 0x172c <__ultoa_invert+0x86>
    170e:	c9 f7       	brne	.-14     	; 0x1702 <__ultoa_invert+0x5c>
    1710:	f6 cf       	rjmp	.-20     	; 0x16fe <__ultoa_invert+0x58>
    1712:	46 2f       	mov	r20, r22
    1714:	4f 70       	andi	r20, 0x0F	; 15
    1716:	40 5d       	subi	r20, 0xD0	; 208
    1718:	4a 33       	cpi	r20, 0x3A	; 58
    171a:	18 f0       	brcs	.+6      	; 0x1722 <__ultoa_invert+0x7c>
    171c:	49 5d       	subi	r20, 0xD9	; 217
    171e:	31 fd       	sbrc	r19, 1
    1720:	40 52       	subi	r20, 0x20	; 32
    1722:	41 93       	st	Z+, r20
    1724:	02 d0       	rcall	.+4      	; 0x172a <__ultoa_invert+0x84>
    1726:	a9 f7       	brne	.-22     	; 0x1712 <__ultoa_invert+0x6c>
    1728:	ea cf       	rjmp	.-44     	; 0x16fe <__ultoa_invert+0x58>
    172a:	b4 e0       	ldi	r27, 0x04	; 4
    172c:	a6 95       	lsr	r26
    172e:	97 95       	ror	r25
    1730:	87 95       	ror	r24
    1732:	77 95       	ror	r23
    1734:	67 95       	ror	r22
    1736:	ba 95       	dec	r27
    1738:	c9 f7       	brne	.-14     	; 0x172c <__ultoa_invert+0x86>
    173a:	00 97       	sbiw	r24, 0x00	; 0
    173c:	61 05       	cpc	r22, r1
    173e:	71 05       	cpc	r23, r1
    1740:	08 95       	ret
    1742:	9b 01       	movw	r18, r22
    1744:	ac 01       	movw	r20, r24
    1746:	0a 2e       	mov	r0, r26
    1748:	06 94       	lsr	r0
    174a:	57 95       	ror	r21
    174c:	47 95       	ror	r20
    174e:	37 95       	ror	r19
    1750:	27 95       	ror	r18
    1752:	ba 95       	dec	r27
    1754:	c9 f7       	brne	.-14     	; 0x1748 <__ultoa_invert+0xa2>
    1756:	62 0f       	add	r22, r18
    1758:	73 1f       	adc	r23, r19
    175a:	84 1f       	adc	r24, r20
    175c:	95 1f       	adc	r25, r21
    175e:	a0 1d       	adc	r26, r0
    1760:	08 95       	ret

00001762 <__prologue_saves__>:
    1762:	2f 92       	push	r2
    1764:	3f 92       	push	r3
    1766:	4f 92       	push	r4
    1768:	5f 92       	push	r5
    176a:	6f 92       	push	r6
    176c:	7f 92       	push	r7
    176e:	8f 92       	push	r8
    1770:	9f 92       	push	r9
    1772:	af 92       	push	r10
    1774:	bf 92       	push	r11
    1776:	cf 92       	push	r12
    1778:	df 92       	push	r13
    177a:	ef 92       	push	r14
    177c:	ff 92       	push	r15
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	cf 93       	push	r28
    1784:	df 93       	push	r29
    1786:	cd b7       	in	r28, 0x3d	; 61
    1788:	de b7       	in	r29, 0x3e	; 62
    178a:	ca 1b       	sub	r28, r26
    178c:	db 0b       	sbc	r29, r27
    178e:	0f b6       	in	r0, 0x3f	; 63
    1790:	f8 94       	cli
    1792:	de bf       	out	0x3e, r29	; 62
    1794:	0f be       	out	0x3f, r0	; 63
    1796:	cd bf       	out	0x3d, r28	; 61
    1798:	09 94       	ijmp

0000179a <__epilogue_restores__>:
    179a:	2a 88       	ldd	r2, Y+18	; 0x12
    179c:	39 88       	ldd	r3, Y+17	; 0x11
    179e:	48 88       	ldd	r4, Y+16	; 0x10
    17a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    17a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    17a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    17a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    17a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    17aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    17ac:	b9 84       	ldd	r11, Y+9	; 0x09
    17ae:	c8 84       	ldd	r12, Y+8	; 0x08
    17b0:	df 80       	ldd	r13, Y+7	; 0x07
    17b2:	ee 80       	ldd	r14, Y+6	; 0x06
    17b4:	fd 80       	ldd	r15, Y+5	; 0x05
    17b6:	0c 81       	ldd	r16, Y+4	; 0x04
    17b8:	1b 81       	ldd	r17, Y+3	; 0x03
    17ba:	aa 81       	ldd	r26, Y+2	; 0x02
    17bc:	b9 81       	ldd	r27, Y+1	; 0x01
    17be:	ce 0f       	add	r28, r30
    17c0:	d1 1d       	adc	r29, r1
    17c2:	0f b6       	in	r0, 0x3f	; 63
    17c4:	f8 94       	cli
    17c6:	de bf       	out	0x3e, r29	; 62
    17c8:	0f be       	out	0x3f, r0	; 63
    17ca:	cd bf       	out	0x3d, r28	; 61
    17cc:	ed 01       	movw	r28, r26
    17ce:	08 95       	ret

000017d0 <_exit>:
    17d0:	f8 94       	cli

000017d2 <__stop_program>:
    17d2:	ff cf       	rjmp	.-2      	; 0x17d2 <__stop_program>
